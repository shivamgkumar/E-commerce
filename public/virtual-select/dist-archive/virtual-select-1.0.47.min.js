/*!
 * Virtual Select v1.0.47
 * https://sa-si-dev.github.io/virtual-select
 * Licensed under MIT (https://github.com/sa-si-dev/virtual-select/blob/master/LICENSE)
 */!function(){var e={"./src/utils/dom-utils.js":
/*!********************************!*\
  !*** ./src/utils/dom-utils.js ***!
  \********************************/function(e,t,i){"use strict";i.r(t),i.d(t,{DomUtils:function(){return p}});var o=i(/*! ./utils */"./src/utils/utils.js");function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var o,s,n,r,a=[],l=!0,u=!1;try{if(n=(i=i.call(e)).next,0===t){if(Object(i)!==i)return;l=!1}else for(;!(l=(o=n.call(i)).done)&&(a.push(o.value),a.length!==t);l=!0);}catch(e){u=!0,s=e}finally{try{if(!l&&null!=i.return&&(r=i.return(),Object(r)!==r))return}finally{if(u)throw s}}return a}}(e,t)||a(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e){return function(e){if(Array.isArray(e))return l(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||a(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){if(e){if("string"==typeof e)return l(e,t);var i={}.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?l(e,t):void 0}}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,o=Array(t);i<t;i++)o[i]=e[i];return o}function u(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,c(o.key),o)}}function c(e){var t=function(e,t){if("object"!=s(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var o=i.call(e,t||"default");if("object"!=s(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==s(t)?t:t+""}var p=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,s=[{key:"addClass",value:function(t,i){if(t){var o=i.split(" ");e.getElements(t).forEach((function(e){var t;(t=e.classList).add.apply(t,r(o))}))}}},{key:"removeClass",value:function(t,i){if(t){var o=i.split(" ");e.getElements(t).forEach((function(e){var t;(t=e.classList).remove.apply(t,r(o))}))}}},{key:"toggleClass",value:function(t,i,o){var s;t&&(void 0!==o&&(s=Boolean(o)),e.getElements(t).forEach((function(e){e.classList.toggle(i,s)})))}},{key:"hasClass",value:function(e,t){return!!e&&e.classList.contains(t)}},{key:"hasEllipsis",value:function(e){return!!e&&e.scrollWidth>e.offsetWidth}},{key:"getData",value:function(e,t,i){if(e){var o=e?e.dataset[t]:"";return"number"===i?o=parseFloat(o)||0:"true"===o?o=!0:"false"===o&&(o=!1),o}}},{key:"setData",value:function(e,t,i){e&&(e.dataset[t]=i)}},{key:"setAttr",value:function(e,t,i){e&&e.setAttribute(t,i)}},{key:"setAttrFromEle",value:function(e,t,i,o){var s={};i.forEach((function(t){s[t]=e.getAttribute(t)})),i.forEach((function(e){var i=s[e];(i||-1!==o.indexOf(e)&&""===i)&&t.setAttribute(e,i)}))}},{key:"setStyle",value:function(e,t,i){e&&(e.style[t]=i)}},{key:"setStyles",value:function(e,t){e&&t&&Object.keys(t).forEach((function(i){e.style[i]=t[i]}))}},{key:"setAria",value:function(e,t,i){var o=t;"role"!==o&&(o="aria-".concat(o)),e.setAttribute(o,i)}},{key:"getElements",value:function(e){return e?void 0===e.forEach?[e]:e:[]}},{key:"getElementsBySelector",value:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,o=void 0!==i?i:document;return""!==t&&(e=o.querySelectorAll(t)),void 0!==e?Array.from(e):[]}},{key:"addEvent",value:function(t,i,s){t&&o.Utils.removeArrayEmpty(i.split(" ")).forEach((function(i){e.getElements(t).forEach((function(e){e.addEventListener(i,s)}))}))}},{key:"dispatchEvent",value:function(t,i){var o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(t){var s=e.getElements(t);setTimeout((function(){s.forEach((function(e){e.dispatchEvent(new CustomEvent(i,{bubbles:o}))}))}),0)}}},{key:"getAttributesText",value:function(e){var t="";return e?(Object.entries(e).forEach((function(e){var i=n(e,2),o=i[0],s=i[1];void 0!==s&&(t+=" ".concat(o,'="').concat(s,'" '))})),t):t}},{key:"convertPropToDataAttr",value:function(e){return e?"data-".concat(e).replace(/([A-Z])/g,"-$1").toLowerCase():""}},{key:"changeTabIndex",value:function(t,i){t?e.getElements(t).forEach((function(e){e.tabIndex=i})):console.log(t,"Invalid element provided.")}},{key:"removeEvent",value:function(t,i,o){t&&e.getElements(t).forEach((function(e){e.removeEventListener(i,o)}))}}],(i=null)&&u(t.prototype,i),s&&u(t,s),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,i,s}()},"./src/utils/index.js":
/*!****************************!*\
  !*** ./src/utils/index.js ***!
  \****************************/function(e,t,i){"use strict";i.r(t),i.d(t,{DomUtils:function(){return s.DomUtils},Utils:function(){return o.Utils}});var o=i(/*! ./utils */"./src/utils/utils.js"),s=i(/*! ./dom-utils */"./src/utils/dom-utils.js")},"./src/utils/utils.js":
/*!****************************!*\
  !*** ./src/utils/utils.js ***!
  \****************************/function(e,t,i){"use strict";function o(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var i={}.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?s(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,o=Array(t);i<t;i++)o[i]=e[i];return o}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function r(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,a(o.key),o)}}function a(e){var t=function(e,t){if("object"!=n(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var o=i.call(e,t||"default");if("object"!=n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==n(t)?t:t+""}i.r(t),i.d(t,{Utils:function(){return l}});var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,s=[{key:"getString",value:function(e){return e||0===e?e.toString():""}},{key:"convertToBoolean",value:function(e){return!0===e||"true"===e||!1!==e&&"false"!==e&&arguments.length>1&&void 0!==arguments[1]&&arguments[1]}},{key:"isEmpty",value:function(e){var t=!1;return e?Array.isArray(e)?0===e.length&&(t=!0):"object"===n(e)&&0===Object.keys(e).length&&(t=!0):t=!0,t}},{key:"isNotEmpty",value:function(t){return!e.isEmpty(t)}},{key:"removeItemFromArray",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!Array.isArray(e)||!e.length)return e;var s=i?o(e):e,n=s.indexOf(t);return-1!==n&&s.splice(n,1),s}},{key:"removeArrayEmpty",value:function(e){return Array.isArray(e)&&e.length?e.filter((function(e){return!!e})):[]}},{key:"getRandomInt",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=Math.ceil(t),o=Math.floor(e);return Math.floor(Math.random()*(o-i-1))+i}},{key:"regexEscape",value:function(e){return e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&")}},{key:"normalizeString",value:function(e){return e.normalize("NFD").replace(/[^\w]/g,"")}},{key:"willTextOverflow",value:function(e,t){var i=document.createElement("div");i.style.position="absolute",i.style.visibility="hidden",i.style.whiteSpace="nowrap",i.style.fontSize=window.getComputedStyle(e).fontSize,i.style.fontFamily=window.getComputedStyle(e).fontFamily,i.textContent=t,document.body.appendChild(i);var o=i.clientWidth;return document.body.removeChild(i),o>e.clientWidth}},{key:"replaceDoubleQuotesWithHTML",value:function(e){return e.replace(/"/g,"&quot;")}},{key:"containsHTML",value:function(e){return/<[a-z][\s\S]*>/i.test(e)}},{key:"containsHTMLorJS",value:function(e){return/<([a-z]+)[\s\S]*?>|on\w+="[^"]*"/i.test(e)}}],(i=null)&&r(t.prototype,i),s&&r(t,s),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,i,s}()}},t={};function i(o){var s=t[o];if(void 0!==s)return s.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,i),n.exports}i.d=function(e,t){for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){"use strict";var e={};
/*!*******************************!*\
  !*** ./src/virtual-select.js ***!
  \*******************************/i.r(e),i.d(e,{VirtualSelect:function(){return b}});var t=i(/*! ./utils */"./src/utils/index.js");function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,o)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function n(e,t,i){return(t=h(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var o,s,n,r,a=[],l=!0,u=!1;try{if(n=(i=i.call(e)).next,0===t){if(Object(i)!==i)return;l=!1}else for(;!(l=(o=n.call(i)).done)&&(a.push(o.value),a.length!==t);l=!0);}catch(e){u=!0,s=e}finally{try{if(!l&&null!=i.return&&(r=i.return(),Object(r)!==r))return}finally{if(u)throw s}}return a}}(e,t)||u(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||u(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){if(e){if("string"==typeof e)return c(e,t);var i={}.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,o=Array(t);i<t;i++)o[i]=e[i];return o}function p(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,h(o.key),o)}}function h(e){var t=function(e,t){if("object"!=r(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var o=i.call(e,t||"default");if("object"!=r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==r(t)?t:t+""}var d,v={13:"onEnterPress",38:"onUpArrowPress",40:"onDownArrowPress",46:"onBackspaceOrDeletePress",8:"onBackspaceOrDeletePress"},f=["autofocus","disabled","multiple","required"],m=["autofocus","class","disabled","id","multiple","name","placeholder","required"],y=["additionalClasses","additionalDropboxClasses","additionalDropboxContainerClasses","additionalToggleButtonClasses","aliasKey","allOptionsSelectedText","allowNewOption","alwaysShowSelectedOptionsCount","alwaysShowSelectedOptionsLabel","ariaLabelledby","ariaLabelText","ariaLabelClearButtonText","ariaLabelTagClearButtonText","ariaLabelSearchClearButtonText","autoSelectFirstOption","clearButtonText","descriptionKey","disableAllOptionsSelectedText","disableOptionGroupCheckbox","disableSelectAll","disableValidation","dropboxWidth","dropboxWrapper","emptyValue","enableSecureText","focusSelectedOptionOnOpen","hasOptionDescription","hideClearButton","hideValueTooltipOnSelectAll","keepAlwaysOpen","labelKey","markSearchResults","maxValues","maxWidth","minValues","moreText","noOfDisplayValues","noOptionsText","noSearchResultsText","optionHeight","optionSelectedText","optionsCount","optionsSelectedText","popupDropboxBreakpoint","popupPosition","position","search","searchByStartsWith","searchDelay","searchFormLabel","searchGroup","searchNormalize","searchPlaceholderText","selectAllOnlyVisible","selectAllText","setValueAsArray","showDropboxAsPopup","showOptionsOnlyOnSearch","showSelectedOptionsFirst","showValueAsTags","silentInitialValueSet","textDirection","tooltipAlignment","tooltipFontSize","tooltipMaxWidth","updatePositionThrottle","useGroupValue","valueKey","zIndex"],b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);try{this.createSecureTextElements(),this.setProps(t),this.setDisabledOptions(t.disabledOptions),this.setOptions(t.options),this.render()}catch(e){console.warn("Couldn't initiate Virtual Select"),console.error(e)}}return i=e,o=[{key:"render",value:function(){if(this.$ele){var e=this.uniqueId,i="vscomp-wrapper",o="vscomp-toggle-button",s=this.showValueAsTags?"":this.getTooltipAttrText(this.placeholder,!0,!0),n=this.getTooltipAttrText(this.clearButtonText),r=this.ariaLabelledby?'aria-labelledby="'.concat(this.ariaLabelledby,'"'):"",a=this.ariaLabelText?'aria-label="'.concat(this.ariaLabelText,'"'):"",l=this.ariaLabelClearButtonText?'aria-label="'.concat(this.ariaLabelClearButtonText,'"'):"",u=!1;this.additionalClasses&&(i+=" ".concat(this.additionalClasses)),this.additionalToggleButtonClasses&&(o+=" ".concat(this.additionalToggleButtonClasses)),this.multiple&&(i+=" multiple",this.disableSelectAll||(i+=" has-select-all")),this.hideClearButton||(i+=" has-clear-button"),this.keepAlwaysOpen?(i+=" keep-always-open",u=!0):i+=" closed",this.showAsPopup&&(i+=" show-as-popup"),this.hasSearch&&(i+=" has-search-input"),this.showValueAsTags&&(i+=" show-value-as-tags"),this.textDirection&&(i+=" text-direction-".concat(this.textDirection)),this.popupPosition&&(i+=" popup-position-".concat(this.popupPosition.toLowerCase()));var c='<div id="vscomp-ele-wrapper-'.concat(e,'" class="vscomp-ele-wrapper ').concat(i,'" tabindex="0"\n        role="combobox" aria-haspopup="listbox" aria-controls="vscomp-dropbox-container-').concat(e,'"\n        aria-expanded="').concat(u,'" ').concat(r," ").concat(a,'>\n        <input type="hidden" name="').concat(this.name,'" class="vscomp-hidden-input">\n        <div class="').concat(o,'">\n          <div class="vscomp-value" ').concat(s,">\n            ").concat(this.placeholder,'\n          </div>\n          <div class="vscomp-arrow"></div>\n          <div class="vscomp-clear-button toggle-button-child" ').concat(n,' \n          tabindex="-1" role="button" ').concat(l,'>\n            <i class="vscomp-clear-icon"></i>\n          </div>\n        </div>\n\n        ').concat(this.renderDropbox({wrapperClasses:i}),"\n      </div>");this.$ele.innerHTML=c,this.$body=document.querySelector("body"),this.$wrapper=this.$ele.querySelector(".vscomp-wrapper"),this.hasDropboxWrapper?(this.$allWrappers=[this.$wrapper,this.$dropboxWrapper],this.$dropboxContainer=this.$dropboxWrapper.querySelector(".vscomp-dropbox-container"),t.DomUtils.addClass(this.$dropboxContainer,"pop-comp-wrapper")):(this.$allWrappers=[this.$wrapper],this.$dropboxContainer=this.$wrapper.querySelector(".vscomp-dropbox-container")),this.$toggleButton=this.$ele.querySelector(".vscomp-toggle-button"),this.$clearButton=this.$ele.querySelector(".vscomp-clear-button"),this.$valueText=this.$ele.querySelector(".vscomp-value"),this.$hiddenInput=this.$ele.querySelector(".vscomp-hidden-input"),this.$dropbox=this.$dropboxContainer.querySelector(".vscomp-dropbox"),this.$dropboxCloseButton=this.$dropboxContainer.querySelector(".vscomp-dropbox-close-button"),this.$dropboxContainerBottom=this.$dropboxContainer.querySelector(".vscomp-dropbox-container-bottom"),this.$dropboxContainerTop=this.$dropboxContainer.querySelector(".vscomp-dropbox-container-top"),this.$search=this.$dropboxContainer.querySelector(".vscomp-search-wrapper"),this.$optionsContainer=this.$dropboxContainer.querySelector(".vscomp-options-container"),this.$optionsList=this.$dropboxContainer.querySelector(".vscomp-options-list"),this.$options=this.$dropboxContainer.querySelector(".vscomp-options"),this.$noOptions=this.$dropboxContainer.querySelector(".vscomp-no-options"),this.$noSearchResults=this.$dropboxContainer.querySelector(".vscomp-no-search-results"),this.afterRenderWrapper()}}},{key:"renderDropbox",value:function(e){var i=e.wrapperClasses,o="self"!==this.dropboxWrapper?document.querySelector(this.dropboxWrapper):null,s="vscomp-dropbox";this.additionalDropboxClasses&&(s+=" ".concat(this.additionalDropboxClasses));var n="vscomp-dropbox-container";this.additionalDropboxContainerClasses&&(n+=" ".concat(this.additionalDropboxContainerClasses));var r='<div id="vscomp-dropbox-container-'.concat(this.uniqueId,'" role="listbox" class="').concat(n,'">\n        <div class="vscomp-dropbox-container-top" aria-hidden="true" tabindex="-1">&nbsp;</div>\n        <div class="').concat(s,'">\n          <div class="vscomp-search-wrapper"></div>\n\n          <div class="vscomp-options-container">\n            <div class="vscomp-options-loader"></div>\n\n            <div class="vscomp-options-list">\n              <div class="vscomp-options"></div>\n            </div>\n          </div>\n\n          <div class="vscomp-options-bottom-freezer"></div>\n          <div class="vscomp-no-options">').concat(this.noOptionsText,'</div>\n          <div class="vscomp-no-search-results">').concat(this.noSearchResultsText,'</div>\n\n          <span class="vscomp-dropbox-close-button"><i class="vscomp-clear-icon"></i></span>\n        </div>\n        <div class="vscomp-dropbox-container-bottom" aria-hidden="true" tabindex="-1">&nbsp;</div>\n      </div>');if(o){var a=document.createElement("div");return this.$dropboxWrapper=a,this.hasDropboxWrapper=!0,a.innerHTML=r,o.appendChild(a),t.DomUtils.addClass(a,"vscomp-dropbox-wrapper ".concat(i)),this.keepAlwaysOpen||(t.DomUtils.setAttr(a,"tabindex","-1"),t.DomUtils.setAria(a,"hidden",!0)),""}return this.hasDropboxWrapper=!1,r}},{key:"renderOptions",value:function(){var e,i=this,o="",s=this.getVisibleOptions(),n="",r="",a=!(!this.markSearchResults||!this.searchValue),l=this.labelRenderer,u=this.disableOptionGroupCheckbox,c=this.uniqueId,p=this.searchGroup,h="function"==typeof l,d=t.Utils.convertToBoolean,v="";if(a&&(e=new RegExp("(".concat(t.Utils.regexEscape(this.searchValue),")(?!([^<]+)?>)"),"gi")),this.multiple&&(n='<span class="checkbox-icon"></span>'),this.allowNewOption){var f=this.getTooltipAttrText("New Option");r='<span class="vscomp-new-option-icon" '.concat(f,"></span>")}s.forEach((function(t){var s,f=t.index,m="vscomp-option",y=i.getTooltipAttrText("",!0,!0),b=n,g="",O="",S="",x="",w="-1",k=d(t.isSelected),D="";if(t.classNames&&(m+=" ".concat(t.classNames)),t.isFocused&&(w="0",m+=" focused"),t.isDisabled&&(m+=" disabled",D='aria-disabled="true"'),t.isGroupTitle&&(v=t.label,m+=" group-title",u&&(b="")),k&&(m+=" selected"),t.isGroupOption){var C="";m+=" group-option",S='data-group-index="'.concat(t.groupIndex,'"'),t.customData?(v=void 0!==t.customData.group_name?"".concat(t.customData.group_name,", "):"",C=void 0!==t.customData.description?" ".concat(t.customData.description,","):"",x='aria-label="'.concat(v," ").concat(t.label,", ").concat(C,'"')):x='aria-label="'.concat(v,", ").concat(t.label,'"')}s=h?l(t):t.label,t.description&&(O='<div class="vscomp-option-description" '.concat(y,">").concat(t.description,"</div>")),t.isCurrentNew?(m+=" current-new",g+=r):!a||t.isGroupTitle&&!p||(s=s.replace(e,"<mark>$1</mark>")),o+='<div role="option" aria-selected="'.concat(k,'" id="vscomp-option-').concat(c,"-").concat(f,'"\n          class="').concat(m,'" data-value="').concat(t.value,'" data-index="').concat(f,'" data-visible-index="').concat(t.visibleIndex,'"\n          tabindex=').concat(w," ").concat(S," ").concat(D," ").concat(x,"\n        >\n          ").concat(b,'\n          <span class="vscomp-option-text" ').concat(y,">\n            ").concat(s,"\n          </span>\n          ").concat(O,"\n          ").concat(g,"\n        </div>")})),v="",this.$options.innerHTML=o,this.$visibleOptions=this.$options.querySelectorAll(".vscomp-option"),this.afterRenderOptions()}},{key:"renderSearch",value:function(){if(this.hasSearchContainer){var e="",t="";if(this.multiple&&!this.disableSelectAll&&(e='<span class="vscomp-toggle-all-button" tabindex="0" aria-label="'.concat(this.selectAllText,'">\n          <span class="checkbox-icon vscomp-toggle-all-checkbox"></span>\n          <span class="vscomp-toggle-all-label">').concat(this.selectAllText,"</span>\n        </span>")),this.hasSearch){var i=this.ariaLabelSearchClearButtonText?'aria-label="'.concat(this.ariaLabelSearchClearButtonText,'"'):"";t='<label for="vscomp-search-input-'.concat(this.uniqueId,'" class="vscomp-search-label"\n        id="vscomp-search-label-').concat(this.uniqueId,'"\n      >\n        ').concat(this.searchFormLabel,'\n      </label>\n      <input type="text" class="vscomp-search-input" placeholder="').concat(this.searchPlaceholderText,'"\n        id="vscomp-search-input-').concat(this.uniqueId,'">\n      <span class="vscomp-search-clear" role="button" ').concat(i,">&times;</span>")}var o='<div class="vscomp-search-container">\n        '.concat(e,"\n        ").concat(t,"\n      </div>");this.$search.innerHTML=o,this.$searchInput=this.$dropboxContainer.querySelector(".vscomp-search-input"),this.$searchClear=this.$dropboxContainer.querySelector(".vscomp-search-clear"),this.$toggleAllButton=this.$dropboxContainer.querySelector(".vscomp-toggle-all-button"),this.$toggleAllCheckbox=this.$dropboxContainer.querySelector(".vscomp-toggle-all-checkbox"),this.addEvent(this.$searchInput,"input","onSearch"),this.addEvent(this.$searchClear,"click keydown","onSearchClear"),this.addEvent(this.$toggleAllButton,"click","onToggleAllOptions"),this.addEvent(this.$dropboxContainerBottom,"focus","onDropboxContainerTopOrBottomFocus"),this.addEvent(this.$dropboxContainerTop,"focus","onDropboxContainerTopOrBottomFocus")}}},{key:"addEvents",value:function(){this.addEvent(document,"click","onDocumentClick"),this.addEvent(this.$allWrappers,"keydown","onKeyDown"),this.addEvent(this.$toggleButton,"click keydown","onToggleButtonPress"),this.addEvent(this.$clearButton,"click keydown","onClearButtonClick"),this.addEvent(this.$dropboxContainer,"click","onDropboxContainerClick"),this.addEvent(this.$dropboxCloseButton,"click","onDropboxCloseButtonClick"),this.addEvent(this.$optionsContainer,"scroll","onOptionsScroll"),this.addEvent(this.$options,"click","onOptionsClick"),this.addEvent(this.$options,"mouseover","onOptionsMouseOver"),this.addEvent(this.$options,"touchmove","onOptionsTouchMove"),this.addMutationObserver()}},{key:"addEvent",value:function(e,i,o){var s=this;e&&t.Utils.removeArrayEmpty(i.split(" ")).forEach((function(i){var n="".concat(o,"-").concat(i),r=s.events[n];r||(r=s[o].bind(s),s.events[n]=r),t.DomUtils.addEvent(e,i,r)}))}},{key:"removeEvents",value:function(){this.removeEvent(document,"click","onDocumentClick"),this.removeEvent(this.$allWrappers,"keydown","onKeyDown"),this.removeEvent(this.$toggleButton,"click keydown","onToggleButtonPress"),this.removeEvent(this.$clearButton,"click keydown","onClearButtonClick"),this.removeEvent(this.$dropboxContainer,"click","onDropboxContainerClick"),this.removeEvent(this.$dropboxCloseButton,"click","onDropboxCloseButtonClick"),this.removeEvent(this.$optionsContainer,"scroll","onOptionsScroll"),this.removeEvent(this.$options,"click","onOptionsClick"),this.removeEvent(this.$options,"mouseover","onOptionsMouseOver"),this.removeEvent(this.$options,"touchmove","onOptionsTouchMove"),this.removeMutationObserver()}},{key:"removeEvent",value:function(e,i,o){var s=this;e&&t.Utils.removeArrayEmpty(i.split(" ")).forEach((function(i){var n="".concat(o,"-").concat(i),r=s.events[n];r&&t.DomUtils.removeEvent(e,i,r)}))}},{key:"onDocumentClick",value:function(e){var t=e.target.closest(".vscomp-wrapper");t!==this.$wrapper&&t!==this.$dropboxWrapper&&this.isOpened()&&this.closeDropbox()}},{key:"onKeyDown",value:function(e){var t=e.which||e.keyCode,i=v[t];if(document.activeElement!==this.$searchInput||e.shiftKey||9!==t||this.multiple||(e.preventDefault(),this.focusFirstVisibleOption()),document.activeElement!==this.$toggleAllButton||13!==t){if(27===t||"Escape"===e.key){var o=this.showAsPopup?this.$wrapper:this.$dropboxWrapper;if((document.activeElement===o||o.contains(document.activeElement))&&!this.keepAlwaysOpen)return void this.closeDropbox()}i&&this[i](e)}else this.toggleAllOptions()}},{key:"onEnterPress",value:function(e){e.preventDefault(),this.isOpened()?this.selectFocusedOption():!1===this.$ele.disabled&&this.openDropbox()}},{key:"onDownArrowPress",value:function(e){e.preventDefault(),this.isOpened()?this.focusOption({direction:"next"}):this.openDropbox()}},{key:"onUpArrowPress",value:function(e){e.preventDefault(),this.isOpened()?this.focusOption({direction:"previous"}):this.openDropbox()}},{key:"onBackspaceOrDeletePress",value:function(e){e.target===this.$wrapper&&(e.preventDefault(),this.selectedValues.length>0&&this.reset())}},{key:"onToggleButtonPress",value:function(e){e.stopPropagation();var t=e.which||e.keyCode;if("keydown"!==e.type||13===t||32===t){var i=e.target;i.closest(".vscomp-value-tag-clear-button")?this.removeValue(i.closest(".vscomp-value-tag")):i.closest(".toggle-button-child")||this.toggleDropbox()}}},{key:"onClearButtonClick",value:function(e){"click"===e.type?this.reset():"keydown"!==e.type||"Enter"!==e.code&&"Space"!==e.code||(e.stopPropagation(),this.reset())}},{key:"onOptionsScroll",value:function(){this.setVisibleOptions()}},{key:"onOptionsClick",value:function(e){var i=e.target.closest(".vscomp-option");i&&!t.DomUtils.hasClass(i,"disabled")&&(t.DomUtils.hasClass(i,"group-title")?this.onGroupTitleClick(i):this.selectOption(i,{event:e}))}},{key:"onGroupTitleClick",value:function(e){if(e&&this.multiple&&!this.disableOptionGroupCheckbox){var i=!t.DomUtils.hasClass(e,"selected");this.toggleGroupTitleCheckbox(e,i),this.toggleGroupOptions(e,i)}}},{key:"onDropboxContainerClick",value:function(e){e.target.closest(".vscomp-dropbox")||this.closeDropbox()}},{key:"onDropboxCloseButtonClick",value:function(){this.closeDropbox()}},{key:"onOptionsMouseOver",value:function(e){var i=e.target.closest(".vscomp-option");i&&this.isOpened()&&(t.DomUtils.hasClass(i,"disabled")||t.DomUtils.hasClass(i,"group-title")?this.removeOptionFocus():this.focusOption({$option:i}))}},{key:"onOptionsTouchMove",value:function(){this.removeOptionFocus()}},{key:"onSearch",value:function(e){e.stopPropagation(),this.setSearchValue(e.target.value,!0)}},{key:"onSearchClear",value:function(e){e.stopPropagation();var t=e.which||e.keyCode;13!==t&&32!==t||(this.setSearchValue(""),this.focusSearchInput())}},{key:"onToggleAllOptions",value:function(){this.toggleAllOptions()}},{key:"onDropboxContainerTopOrBottomFocus",value:function(){this.closeDropbox()}},{key:"onResize",value:function(){this.setOptionsContainerHeight(!0)}},{key:"addMutationObserver",value:function(){var e=this;if(this.hasDropboxWrapper){var t=this.$ele;this.mutationObserver=new MutationObserver((function(i){var o=!1,s=!1;i.forEach((function(e){o||(o=l(e.addedNodes).some((function(e){return!(e!==t&&!e.contains(t))}))),s||(s=l(e.removedNodes).some((function(e){return!(e!==t&&!e.contains(t))})))})),s&&!o&&e.destroy()})),this.mutationObserver.observe(document.querySelector("body"),{childList:!0,subtree:!0})}}},{key:"removeMutationObserver",value:function(){this.mutationObserver.disconnect()}},{key:"beforeValueSet",value:function(e){this.toggleAllOptionsClass(!e&&void 0)}},{key:"beforeSelectNewValue",value:function(){var e=this,t=this.getNewOption(),i=t.index;this.newValues.push(t.value),this.setOptionProp(i,"isCurrentNew",!1),this.setOptionProp(i,"isNew",!0),setTimeout((function(){e.setSearchValue(""),e.focusSearchInput()}),0)}},{key:"afterRenderWrapper",value:function(){t.DomUtils.addClass(this.$ele,"vscomp-ele"),this.renderSearch(),this.setEleStyles(),this.setDropboxStyles(),this.setOptionsHeight(),this.setVisibleOptions(),this.setOptionsContainerHeight(),this.addEvents(),this.setEleProps(),this.keepAlwaysOpen||this.showAsPopup||this.initDropboxPopover(),this.initialSelectedValue?this.setValueMethod(this.initialSelectedValue,this.silentInitialValueSet):this.autoSelectFirstOption&&this.visibleOptions.length&&this.setValueMethod(this.visibleOptions[0].value,this.silentInitialValueSet),this.showOptionsOnlyOnSearch&&this.setSearchValue("",!1,!0),this.initialDisabled&&this.disable(),this.autofocus&&this.focus()}},{key:"afterRenderOptions",value:function(){var e=this.getVisibleOptions(),i=!this.options.length&&!this.hasServerSearch,o=!i&&!e.length;if((!this.allowNewOption||this.hasServerSearch||this.showOptionsOnlyOnSearch)&&(t.DomUtils.toggleClass(this.$allWrappers,"has-no-search-results",o),o?(t.DomUtils.setAttr(this.$noSearchResults,"tabindex","0"),t.DomUtils.setAttr(this.$noSearchResults,"aria-hidden","false")):(t.DomUtils.setAttr(this.$noSearchResults,"tabindex","-1"),t.DomUtils.setAttr(this.$noSearchResults,"aria-hidden","true"))),t.DomUtils.toggleClass(this.$allWrappers,"has-no-options",i),i?(t.DomUtils.setAttr(this.$noOptions,"tabindex","0"),t.DomUtils.setAttr(this.$noOptions,"aria-hidden","false")):(t.DomUtils.setAttr(this.$noOptions,"tabindex","-1"),t.DomUtils.setAttr(this.$noOptions,"aria-hidden","true")),this.setOptionAttr(),this.setOptionsPosition(),this.setOptionsTooltip(),document.activeElement!==this.$searchInput){var s=t.DomUtils.getElementsBySelector(".focused",this.$dropboxContainer)[0];void 0!==s&&s.focus()}}},{key:"afterSetOptionsContainerHeight",value:function(e){e&&this.showAsPopup&&this.setVisibleOptions()}},{key:"afterSetSearchValue",value:function(){var e=this;this.hasServerSearch?(clearInterval(this.serverSearchTimeout),this.serverSearchTimeout=setTimeout((function(){e.serverSearch()}),this.searchDelay)):this.setVisibleOptionsCount(),this.selectAllOnlyVisible&&this.toggleAllOptionsClass(),this.focusOption({focusFirst:!0})}},{key:"afterSetVisibleOptionsCount",value:function(){this.scrollToTop(),this.setOptionsHeight(),this.setVisibleOptions(),this.updatePosition()}},{key:"afterValueSet",value:function(){this.scrollToTop(),this.setSearchValue(""),this.renderOptions()}},{key:"afterSetOptions",value:function(e){e&&this.setSelectedProp(),this.setOptionsHeight(),this.setVisibleOptions(),this.showOptionsOnlyOnSearch&&this.setSearchValue("",!1,!0),e||this.reset()}},{key:"setProps",value:function(e){var i=this.setDefaultProps(e);this.setPropsFromElementAttr(i);var o=t.Utils.convertToBoolean;this.$ele=i.ele,this.dropboxWrapper=i.dropboxWrapper,this.valueKey=i.valueKey,this.labelKey=i.labelKey,this.descriptionKey=i.descriptionKey,this.aliasKey=i.aliasKey,this.optionHeightText=i.optionHeight,this.optionHeight=parseFloat(this.optionHeightText),this.multiple=o(i.multiple),this.hasSearch=o(i.search),this.searchByStartsWith=o(i.searchByStartsWith),this.searchGroup=o(i.searchGroup),this.hideClearButton=o(i.hideClearButton),this.autoSelectFirstOption=o(i.autoSelectFirstOption),this.hasOptionDescription=o(i.hasOptionDescription),this.silentInitialValueSet=o(i.silentInitialValueSet),this.allowNewOption=o(i.allowNewOption),this.markSearchResults=o(i.markSearchResults),this.showSelectedOptionsFirst=o(i.showSelectedOptionsFirst),this.disableSelectAll=o(i.disableSelectAll),this.keepAlwaysOpen=o(i.keepAlwaysOpen),this.showDropboxAsPopup=o(i.showDropboxAsPopup),this.hideValueTooltipOnSelectAll=o(i.hideValueTooltipOnSelectAll),this.showOptionsOnlyOnSearch=o(i.showOptionsOnlyOnSearch),this.selectAllOnlyVisible=o(i.selectAllOnlyVisible),this.alwaysShowSelectedOptionsCount=o(i.alwaysShowSelectedOptionsCount),this.alwaysShowSelectedOptionsLabel=o(i.alwaysShowSelectedOptionsLabel),this.disableAllOptionsSelectedText=o(i.disableAllOptionsSelectedText),this.showValueAsTags=o(i.showValueAsTags),this.disableOptionGroupCheckbox=o(i.disableOptionGroupCheckbox),this.enableSecureText=o(i.enableSecureText),this.setValueAsArray=o(i.setValueAsArray),this.disableValidation=o(i.disableValidation),this.initialDisabled=o(i.disabled),this.required=o(i.required),this.autofocus=o(i.autofocus),this.useGroupValue=o(i.useGroupValue),this.focusSelectedOptionOnOpen=o(i.focusSelectedOptionOnOpen),this.noOptionsText=i.noOptionsText,this.noSearchResultsText=i.noSearchResultsText,this.selectAllText=i.selectAllText,this.searchNormalize=i.searchNormalize,this.searchPlaceholderText=i.searchPlaceholderText,this.searchFormLabel=i.searchFormLabel,this.optionsSelectedText=i.optionsSelectedText,this.optionSelectedText=i.optionSelectedText,this.allOptionsSelectedText=i.allOptionsSelectedText,this.clearButtonText=i.clearButtonText,this.moreText=i.moreText,this.placeholder=i.placeholder,this.position=i.position,this.textDirection=i.textDirection,this.dropboxWidth=i.dropboxWidth,this.tooltipFontSize=i.tooltipFontSize,this.tooltipAlignment=i.tooltipAlignment,this.tooltipMaxWidth=i.tooltipMaxWidth,this.updatePositionThrottle=i.updatePositionThrottle,this.noOfDisplayValues=parseInt(i.noOfDisplayValues),this.zIndex=parseInt(i.zIndex),this.maxValues=parseInt(i.maxValues),this.minValues=parseInt(i.minValues),this.name=this.secureText(i.name),this.additionalClasses=i.additionalClasses,this.additionalDropboxClasses=i.additionalDropboxClasses,this.additionalDropboxContainerClasses=i.additionalDropboxContainerClasses,this.additionalToggleButtonClasses=i.additionalToggleButtonClasses,this.popupDropboxBreakpoint=i.popupDropboxBreakpoint,this.popupPosition=i.popupPosition,this.onServerSearch=i.onServerSearch,this.labelRenderer=i.labelRenderer,this.selectedLabelRenderer=i.selectedLabelRenderer,this.initialSelectedValue=0===i.selectedValue?"0":i.selectedValue,this.emptyValue=i.emptyValue,this.ariaLabelText=i.ariaLabelText,this.ariaLabelledby=i.ariaLabelledby,this.ariaLabelClearButtonText=i.ariaLabelClearButtonText,this.ariaLabelTagClearButtonText=i.ariaLabelTagClearButtonText,this.ariaLabelSearchClearButtonText=i.ariaLabelSearchClearButtonText,this.maxWidth=i.maxWidth,this.searchDelay=i.searchDelay,this.showDuration=parseInt(i.showDuration),this.hideDuration=parseInt(i.hideDuration),this.selectedValues=[],this.selectedOptions=[],this.newValues=[],this.events={},this.tooltipEnterDelay=200,this.searchValue="",this.searchValueOriginal="",this.isAllSelected=!1,(void 0===i.search&&this.multiple||this.allowNewOption||this.showOptionsOnlyOnSearch)&&(this.hasSearch=!0),this.hasServerSearch="function"==typeof this.onServerSearch,(this.maxValues||this.hasServerSearch||this.showOptionsOnlyOnSearch)&&(this.disableSelectAll=!0,this.disableOptionGroupCheckbox=!0),this.keepAlwaysOpen&&(this.dropboxWrapper="self"),this.showAsPopup=this.showDropboxAsPopup&&!this.keepAlwaysOpen&&window.innerWidth<=parseFloat(this.popupDropboxBreakpoint),this.hasSearchContainer=this.hasSearch||this.multiple&&!this.disableSelectAll,this.optionsCount=this.getOptionsCount(i.optionsCount),this.halfOptionsCount=Math.ceil(this.optionsCount/2),this.optionsHeight=this.getOptionsHeight(),this.uniqueId=this.getUniqueId()}},{key:"setDefaultProps",value:function(e){var t={dropboxWrapper:"self",valueKey:"value",labelKey:"label",descriptionKey:"description",aliasKey:"alias",ariaLabelText:"Options list",ariaLabelClearButtonText:"Clear button",ariaLabelTagClearButtonText:"Remove option",ariaLabelSearchClearButtonText:"Clear search input",optionsCount:5,noOfDisplayValues:50,optionHeight:"40px",noOptionsText:"No options found",noSearchResultsText:"No results found",selectAllText:"Select All",searchNormalize:!1,searchPlaceholderText:"Search...",searchFormLabel:"Search",clearButtonText:"Clear",moreText:"more...",optionsSelectedText:"options selected",optionSelectedText:"option selected",allOptionsSelectedText:"All",placeholder:"Select",position:"bottom left",zIndex:e.keepAlwaysOpen?1:2,tooltipFontSize:"14px",tooltipAlignment:"center",tooltipMaxWidth:"300px",updatePositionThrottle:100,name:"",additionalClasses:"",additionalDropboxClasses:"",additionalDropboxContainerClasses:"",additionalToggleButtonClasses:"",maxValues:0,showDropboxAsPopup:!0,popupDropboxBreakpoint:"576px",popupPosition:"center",hideValueTooltipOnSelectAll:!0,emptyValue:"",searchDelay:300,focusSelectedOptionOnOpen:!0,showDuration:300,hideDuration:200};return e.hasOptionDescription&&(t.optionsCount=4,t.optionHeight="50px"),Object.assign(t,e)}},{key:"setPropsFromElementAttr",value:function(e){var t=e.ele;Object.keys(d).forEach((function(i){var o=t.getAttribute(i);-1===f.indexOf(i)||""!==o&&"true"!==o||(o=!0),o&&(e[d[i]]=o)}))}},{key:"setEleProps",value:function(){var t=this.$ele;t.virtualSelect=this,t.value=this.multiple?[]:"",t.name=this.name,t.disabled=!1,t.required=this.required,t.autofocus=this.autofocus,t.multiple=this.multiple,t.form=t.closest("form"),t.reset=e.reset,t.setValue=e.setValueMethod,t.setOptions=e.setOptionsMethod,t.setDisabledOptions=e.setDisabledOptionsMethod,t.setEnabledOptions=e.setEnabledOptionsMethod,t.toggleSelectAll=e.toggleSelectAll,t.isAllSelected=e.isAllSelected,t.addOption=e.addOptionMethod,t.getNewValue=e.getNewValueMethod,t.getDisplayValue=e.getDisplayValueMethod,t.getSelectedOptions=e.getSelectedOptionsMethod,t.getDisabledOptions=e.getDisabledOptionsMethod,t.open=e.openMethod,t.close=e.closeMethod,t.focus=e.focusMethod,t.enable=e.enableMethod,t.disable=e.disableMethod,t.destroy=e.destroyMethod,t.validate=e.validateMethod,t.toggleRequired=e.toggleRequiredMethod,this.hasDropboxWrapper&&(this.$dropboxWrapper.virtualSelect=this)}},{key:"setValueMethod",value:function(e,t){var i={},o={},s=[],n=this.multiple,r=e;if(r){if(Array.isArray(r)||(r=[r]),n){var l=this.maxValues;l&&r.length>l&&r.splice(l)}else r.length>1&&(r=[r[0]]);r=r.map((function(e){return e||0===e?e.toString():""})),this.useGroupValue&&(r=this.setGroupOptionsValue(r)),r.forEach((function(e,t){i[e]=!0,o[e]=t})),this.allowNewOption&&r&&this.setNewOptionsFromValue(r)}if(this.options.forEach((function(e){!0!==i[e.value]||e.isDisabled||e.isGroupTitle?e.isSelected=!1:(e.isSelected=!0,s.push(e.value))})),n)this.hasOptionGroup&&this.setGroupsSelectedProp(),s.sort((function(e,t){return o[e]-o[t]}));else{var u=a(s,1);s=u[0]}this.beforeValueSet(),this.setValue(s,{disableEvent:t}),this.afterValueSet()}},{key:"setGroupOptionsValue",value:function(e){var t=[],i={},o={};return e.forEach((function(e){o[e]=!0})),this.options.forEach((function(e){var s=e.value,n=!0===o[s];e.isGroupTitle?n&&(i[e.index]=!0):(n||i[e.groupIndex])&&t.push(s)})),t}},{key:"setGroupsSelectedProp",value:function(){var e=this.isAllGroupOptionsSelected.bind(this);this.options.forEach((function(t){t.isGroupTitle&&(t.isSelected=e(t.index))}))}},{key:"setOptionsMethod",value:function(e,t){this.setOptions(e),this.afterSetOptions(t)}},{key:"setDisabledOptionsMethod",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.setDisabledOptions(e,!0),t||(this.setValueMethod(null),this.toggleAllOptionsClass()),this.setVisibleOptions()}},{key:"setDisabledOptions",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=[];if(e)if(!0===e)t&&this.options.forEach((function(e){return e.isDisabled=!0,i.push(e.value),e}));else{i=e.map((function(e){return e.toString()}));var o={};i.forEach((function(e){o[e]=!0})),t&&this.options.forEach((function(e){return e.isDisabled=!0===o[e.value],e}))}else t&&this.options.forEach((function(e){return e.isDisabled=!1,e}));this.disabledOptions=i}},{key:"setEnabledOptionsMethod",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.setEnabledOptions(e),t||(this.setValueMethod(null),this.toggleAllOptionsClass()),this.setVisibleOptions()}},{key:"setEnabledOptions",value:function(e){if(void 0!==e){var t=[];if(!0===e)this.options.forEach((function(e){return e.isDisabled=!1,e}));else{var i={};e.forEach((function(e){i[e]=!0})),this.options.forEach((function(e){var o=!0!==i[e.value];return e.isDisabled=o,o&&t.push(e.value),e}))}this.disabledOptions=t}}},{key:"setOptions",value:function(){var e=this,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],o=[],s=this.disabledOptions.length,a=this.valueKey,l=this.labelKey,u=this.descriptionKey,c=this.aliasKey,p=this.hasOptionDescription,h=t.Utils.getString,d=t.Utils.convertToBoolean,v=this.secureText.bind(this),f=this.getAlias.bind(this),m=0,y=!1,b={},g=!1;this.disabledOptions.forEach((function(e){b[e]=!0}));var O=function(i){"object"!==r(i)&&(i=n(n({},a,i),l,i));var S=v(h(i[a])),x=v(h(i[l])),w=i.options,k=!!w,D={index:m,value:S,label:x,labelNormalized:e.searchNormalize?t.Utils.normalizeString(x).toLowerCase():x.toLowerCase(),alias:f(i[c]),isVisible:d(i.isVisible,!0),isNew:i.isNew||!1,isGroupTitle:k,classNames:i.classNames};if(g||""!==S||(g=!0),s&&(D.isDisabled=!0===b[S]),i.isGroupOption&&(D.isGroupOption=!0,D.groupIndex=i.groupIndex),p&&(D.description=v(h(i[u]))),i.customData&&(D.customData=i.customData),o.push(D),m+=1,k){var C=D.index;y=!0,w.forEach((function(e){e.isGroupOption=!0,e.groupIndex=C,O(e)}))}};Array.isArray(i)&&i.forEach(O);var S=o.length,x=this.$ele;x.options=o,x.length=S,this.options=o,this.visibleOptionsCount=S,this.lastOptionIndex=S-1,this.newValues=[],this.hasOptionGroup=y,this.hasEmptyValueOption=g,this.setSortedOptions()}},{key:"setServerOptions",value:function(){var e=this,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.setOptionsMethod(i,!0);var o=this.selectedOptions,s=this.options,n=!1;if(o.length){var r={};n=!0,s.forEach((function(e){r[e.value]=!0})),o.forEach((function(e){!0!==r[e.value]&&(e.isVisible=!1,s.push(e))})),this.setOptionsMethod(s,!0)}this.allowNewOption&&this.searchValue&&(s.some((function(t){return t.label.toLowerCase()===e.searchValue}))||(n=!0,this.setNewOption())),n?(this.setVisibleOptionsCount(),this.multiple&&this.toggleAllOptionsClass(),this.setValueText()):this.updatePosition(),this.setVisibleOptionsCount(),t.DomUtils.removeClass(this.$allWrappers,"server-searching")}},{key:"setSelectedOptions",value:function(){this.selectedOptions=this.options.filter((function(e){return e.isSelected}))}},{key:"setSortedOptions",value:function(){var e=l(this.options);this.showSelectedOptionsFirst&&this.selectedValues.length&&(e=this.hasOptionGroup?this.sortOptionsGroup(e):this.sortOptions(e)),this.sortedOptions=e}},{key:"setVisibleOptions",value:function(){var e=l(this.sortedOptions),t=2*this.optionsCount,i=this.getVisibleStartIndex(),o=this.getNewOption(),s=i+t-1,n=0;o&&(o.visibleIndex=n,n+=1),e=e.filter((function(e){var t=!1;return e.isVisible&&!e.isCurrentNew&&(t=n>=i&&n<=s,e.visibleIndex=n,n+=1),t})),o&&(e=[o].concat(l(e))),this.visibleOptions=e,this.visibleOptionsCount=e.length,this.renderOptions()}},{key:"setOptionsPosition",value:function(e){var i=parseInt((e||this.getVisibleStartIndex())*this.optionHeight);this.$options.style.transform="translate3d(0, ".concat(i,"px, 0)"),t.DomUtils.setData(this.$options,"top",i)}},{key:"setOptionsTooltip",value:function(){var e=this,i=this.getVisibleOptions(),o=this.hasOptionDescription;i.forEach((function(i){var s=e.$dropboxContainer.querySelector('.vscomp-option[data-index="'.concat(i.index,'"]'));t.DomUtils.setData(s.querySelector(".vscomp-option-text"),"tooltip",i.label),o&&t.DomUtils.setData(s.querySelector(".vscomp-option-description"),"tooltip",i.description)}))}},{key:"setValue",value:function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=i.disableEvent,s=void 0!==o&&o,n=i.disableValidation,r=void 0!==n&&n;this.hasEmptyValueOption&&""===e||e?Array.isArray(e)?this.selectedValues=l(e):this.selectedValues=[e]:this.selectedValues=[];var a=this.getValue();this.$ele.value=a,this.$hiddenInput.value=this.getInputValue(a),this.isMaxValuesSelected=!!(this.maxValues&&this.maxValues<=this.selectedValues.length),this.toggleAllOptionsClass(),this.setValueText();var u=t.Utils.isNotEmpty(this.selectedValues);t.DomUtils.toggleClass(this.$allWrappers,"has-value",u),t.DomUtils.toggleClass(this.$allWrappers,"max-value-selected",this.isMaxValuesSelected),t.DomUtils.setAttr(this.$clearButton,"tabindex",u?"0":"-1"),t.DomUtils.setAria(this.$clearButton,"hidden",!1===u),r||this.validate(),s||t.DomUtils.dispatchEvent(this.$ele,"change",!0)}},{key:"setValueText",value:function(){var e=this,i=this.multiple,o=this.selectedValues,s=this.noOfDisplayValues,n=this.showValueAsTags,r=this.$valueText,a=this.selectedLabelRenderer,l=[],u=[],c=o.length,p=0,h=this.isAllSelected&&!this.hasServerSearch&&!this.disableAllOptionsSelectedText&&!n;if(h&&this.hideValueTooltipOnSelectAll)r.innerHTML="".concat(this.allOptionsSelectedText," (").concat(c,")");else{this.getSelectedOptions({fullDetails:!0,keepSelectionOrder:!0}).some((function(i){if(i.isCurrentNew)return!1;if(p>=s)return!0;var o=i.label;if("function"==typeof a&&(o=a(i)),l.push(o),p+=1,n){var c=t.Utils.willTextOverflow(r.parentElement,o)?e.getTooltipAttrText(o,!1,!0):"",h="";if(e.ariaLabelTagClearButtonText){var d=o.replace(/<[^>]+>/gi,"").trim();h='aria-label="'.concat(d,", ").concat(e.ariaLabelTagClearButtonText,'"')}var v='<span class="vscomp-value-tag" data-index="'.concat(i.index,'" ').concat(c,'>\n                  <span class="vscomp-value-tag-content">').concat(o,'</span>\n                  <span \n                    class="vscomp-value-tag-clear-button" \n                    role="button" \n                    ').concat(h,'\n                    tabindex="0">\n                      <i class="vscomp-clear-icon"></i>\n                  </span>\n                </span>');u.push(v)}else u.push(o);return!1}));var d=c-s;d>0&&u.push('<span class="vscomp-value-tag more-value-count">+ '.concat(d," ").concat(this.moreText,"</span>"));var v=l.join(", ");if(""===v)r.innerHTML=this.placeholder;else if(r.innerHTML=v,i){var f=this.maxValues;if(this.alwaysShowSelectedOptionsCount||t.DomUtils.hasEllipsis(r)||f||n){var m='<span class="vscomp-selected-value-count">'.concat(c,"</span>");if(f&&(m+=' / <span class="vscomp-max-value-count">'.concat(f,"</span>")),h)r.innerHTML="".concat(this.allOptionsSelectedText," (").concat(c,")");else if(n)r.innerHTML=u.join(""),this.$valueTags=r.querySelectorAll(".vscomp-value-tag"),this.setValueTagAttr();else if(!this.alwaysShowSelectedOptionsLabel){var y=1===c?this.optionSelectedText:this.optionsSelectedText;r.innerHTML="".concat(m," ").concat(y)}}else u=[]}}var b="";0===c?b=this.placeholder:n||(b=u.join(", ")),n||t.DomUtils.setData(r,"tooltip",b),i&&(n?this.updatePosition():t.DomUtils.setData(r,"tooltipEllipsisOnly",0===c))}},{key:"setSearchValue",value:function(e){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e!==this.searchValueOriginal||o){i||(this.$searchInput.value=e);var s=e.replace(/\\/g,"").toLowerCase().trim();this.searchValue=s,this.searchValueOriginal=e,t.DomUtils.toggleClass(this.$allWrappers,"has-search-value",e),t.DomUtils.setAttr(this.$searchClear,"tabindex",""!==e?"0":"-1"),t.DomUtils.setAria(this.$searchClear,"hidden",""===e),this.afterSetSearchValue()}}},{key:"setVisibleOptionsCount",value:function(){var e,i=0,o=!1,s=this.searchGroup,n=this.showOptionsOnlyOnSearch,r=this.searchByStartsWith,a=this.searchValue;a=this.searchNormalize?t.Utils.normalizeString(a):a;var l=this.isOptionVisible.bind(this);this.hasOptionGroup&&(e=this.getVisibleOptionGroupsMapping(a)),this.options.forEach((function(t){var u;t.isCurrentNew||(n&&!a?(t.isVisible=!1,u={isVisible:!1,hasExactOption:!1}):u=l({data:t,searchValue:a,hasExactOption:o,visibleOptionGroupsMapping:e,searchGroup:s,searchByStartsWith:r}),u.isVisible&&(i+=1),o||(o=u.hasExactOption))})),this.allowNewOption&&(a&&!o?(this.setNewOption(),i+=1):this.removeNewOption()),this.visibleOptionsCount=i,this.afterSetVisibleOptionsCount()}},{key:"setOptionProp",value:function(e,t,i){this.options[e]&&(this.options[e][t]=i)}},{key:"setOptionsHeight",value:function(){this.$optionsList.style.height="".concat(this.optionHeight*this.visibleOptionsCount,"px")}},{key:"setOptionsContainerHeight",value:function(e){var i;e?this.showAsPopup&&(this.optionsCount=this.getOptionsCount(),this.halfOptionsCount=Math.ceil(this.optionsCount/2),i=this.getOptionsHeight(),this.optionsHeight=i):(i=this.optionsHeight,this.keepAlwaysOpen&&(t.DomUtils.setStyle(this.$noOptions,"height",i),t.DomUtils.setStyle(this.$noSearchResults,"height",i))),t.DomUtils.setStyle(this.$optionsContainer,"max-height",i),this.afterSetOptionsContainerHeight(e)}},{key:"setNewOption",value:function(e){var t=e||this.searchValueOriginal.trim();if(t){var i=this.getNewOption();if(i){var o=i.index;this.setOptionProp(o,"value",this.secureText(t)),this.setOptionProp(o,"label",this.secureText(t))}else{var s={value:t,label:t};e?(s.isNew=!0,this.newValues.push(t)):s.isCurrentNew=!0,this.addOption(s)}}}},{key:"setSelectedProp",value:function(){var e={};this.selectedValues.forEach((function(t){e[t]=!0})),this.options.forEach((function(t){!0===e[t.value]&&(t.isSelected=!0)}))}},{key:"setNewOptionsFromValue",value:function(e){if(e){var t=this.setNewOption.bind(this),i={};this.options.forEach((function(e){i[e.value]=!0})),e.forEach((function(e){e&&!0!==i[e]&&t(e)}))}}},{key:"setDropboxWrapperWidth",value:function(){if(!this.showAsPopup){var e=this.dropboxWidth||"".concat(this.$wrapper.offsetWidth,"px");t.DomUtils.setStyle(this.$dropboxContainer,"max-width",e)}}},{key:"setEleStyles",value:function(){var e=this.maxWidth,i={};e&&(i["max-width"]=e),t.DomUtils.setStyles(this.$ele,i)}},{key:"setDropboxStyles",value:function(){var e=this.dropboxWidth,i={},o={"z-index":this.zIndex};e&&(this.showAsPopup?i["max-width"]=e:o.width=e),t.DomUtils.setStyles(this.$dropboxContainer,o),t.DomUtils.setStyles(this.$dropbox,i)}},{key:"setOptionAttr",value:function(){var e=this.$visibleOptions,i=this.options,o="".concat(this.optionHeight,"px"),s=t.DomUtils.setStyle,n=t.DomUtils.getData,r=t.DomUtils.setData;e&&e.length&&e.forEach((function(e){var t=i[n(e,"index")];s(e,"height",o),r(e,"value",t.value)}))}},{key:"setValueTagAttr",value:function(){var e=this.$valueTags;if(e&&e.length){var i=t.DomUtils.getData,o=t.DomUtils.setData,s=this.options;e.forEach((function(e){var t=i(e,"index");if(void 0!==t){var n=s[t];o(e,"value",n.value)}}))}}},{key:"setScrollTop",value:function(){var e=this.selectedValues;if(!this.showSelectedOptionsFirst&&this.focusSelectedOptionOnOpen&&0!==e.length){var t,i={};e.forEach((function(e){i[e]=!0})),this.options.some((function(e){return!!i[e.value]&&(t=e.visibleIndex,!0)})),t&&(this.$optionsContainer.scrollTop=this.optionHeight*t)}}},{key:"getVisibleOptions",value:function(){return this.visibleOptions||[]}},{key:"getValue",value:function(){return this.multiple?this.useGroupValue?this.getGroupValue():this.selectedValues:this.selectedValues[0]||""}},{key:"getGroupValue",value:function(){var e=[],t={};return this.options.forEach((function(i){if(i.isSelected){var o=i.value;i.isGroupTitle?o&&(t[i.index]=!0,e.push(o)):!0!==t[i.groupIndex]&&e.push(o)}})),e}},{key:"getInputValue",value:function(e){var t=e;return t&&t.length?this.setValueAsArray&&this.multiple&&(t=JSON.stringify(t)):t=this.emptyValue,t}},{key:"getFirstVisibleOptionIndex",value:function(){return Math.ceil(this.$optionsContainer.scrollTop/this.optionHeight)}},{key:"getVisibleStartIndex",value:function(){var e=this.getFirstVisibleOptionIndex()-this.halfOptionsCount;return e<0&&(e=0),e}},{key:"getTooltipAttrText",value:function(e){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s={"data-tooltip":(t.Utils.containsHTML(e)?t.Utils.replaceDoubleQuotesWithHTML(e):e)||"","data-tooltip-enter-delay":this.tooltipEnterDelay,"data-tooltip-z-index":this.zIndex,"data-tooltip-font-size":this.tooltipFontSize,"data-tooltip-alignment":this.tooltipAlignment,"data-tooltip-max-width":this.tooltipMaxWidth,"data-tooltip-ellipsis-only":i,"data-tooltip-allow-html":o};return t.DomUtils.getAttributesText(s)}},{key:"getOptionObj",value:function(e){if(e){var i=t.Utils.getString,o=this.secureText.bind(this);return{index:e.index,value:o(i(e.value)),label:o(i(e.label)),description:o(i(e.description)),alias:this.getAlias(e.alias),isCurrentNew:e.isCurrentNew||!1,isNew:e.isNew||!1,isVisible:!0}}}},{key:"getNewOption",value:function(){var e=this.options[this.lastOptionIndex];if(e&&e.isCurrentNew)return e}},{key:"getOptionIndex",value:function(e){var t;return this.options.some((function(i){return i.value===e&&(t=i.index,!0)})),t}},{key:"getNewValue",value:function(){var e={};this.newValues.forEach((function(t){e[t]=!0}));var t=this.selectedValues.filter((function(t){return!0===e[t]}));return this.multiple?t:t[0]}},{key:"getAlias",value:function(e){var t=e;return t&&(t=(t=Array.isArray(t)?t.join(","):t.toString().trim()).toLowerCase()),t||""}},{key:"getDisplayValue",value:function(){var e=[];return this.options.forEach((function(t){t.isSelected&&e.push(t.label)})),this.multiple?e:e[0]||""}},{key:"getSelectedOptions",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.fullDetails,i=void 0!==t&&t,o=e.keepSelectionOrder,s=void 0!==o&&o,r=this.valueKey,a=this.labelKey,l=this.selectedValues,u=[];if(this.options.forEach((function(e){if(e.isSelected&&!e.isGroupTitle)if(i)u.push(e);else{var t=n(n({},r,e.value),a,e.label);e.isNew&&(t.isNew=!0),e.customData&&(t.customData=e.customData),u.push(t)}})),s){var c={};l.forEach((function(e,t){c[e]=t})),u.sort((function(e,t){return c[e.value]-c[t.value]}))}return this.multiple||i?u:u[0]}},{key:"getDisabledOptions",value:function(){var e=this.valueKey,t=this.labelKey,i=this.disabledOptions,o={},s=[];return i.forEach((function(e){o[e]=!0})),this.options.forEach((function(i){var r=i.value,a=i.label;o[r]&&s.push(n(n({},e,r),t,a))})),s}},{key:"getVisibleOptionGroupsMapping",value:function(e){var t=this.options,i={},o=this.isOptionVisible.bind(this);return(t=this.structureOptionGroup(t)).forEach((function(t){i[t.index]=t.options.some((function(t){return o({data:t,searchValue:e}).isVisible}))})),i}},{key:"getOptionsCount",value:function(e){var t;if(this.showAsPopup){var i=80*window.innerHeight/100-48;this.hasSearchContainer&&(i-=40),t=Math.floor(i/this.optionHeight)}else t=parseInt(e);return t}},{key:"getOptionsHeight",value:function(){return"".concat(this.optionsCount*this.optionHeight,"px")}},{key:"getSibling",value:function(e,i){var o="next"===i?"nextElementSibling":"previousElementSibling",s=e;do{s&&(s=s[o])}while(t.DomUtils.hasClass(s,"disabled")||t.DomUtils.hasClass(s,"group-title"));return s}},{key:"getUniqueId",value:function(){var e=t.Utils.getRandomInt(1e4);return document.querySelector("#vscomp-ele-wrapper-".concat(e))?this.getUniqueId():e}},{key:"initDropboxPopover",value:function(){var e={ele:this.$ele,target:this.$dropboxContainer,position:this.position,zIndex:this.zIndex,margin:4,transitionDistance:30,hideArrowIcon:!0,disableManualAction:!0,disableUpdatePosition:!this.hasDropboxWrapper,updatePositionThrottle:this.updatePositionThrottle,showDuration:this.showDuration,hideDuration:this.hideDuration,afterShow:this.afterShowPopper.bind(this),afterHide:this.afterHidePopper.bind(this)};this.dropboxPopover=new PopoverComponent(e)}},{key:"openDropbox",value:function(e){this.isSilentOpen=e,t.DomUtils.setAttr(this.$dropboxWrapper,"tabindex","0"),t.DomUtils.setAria(this.$dropboxWrapper,"hidden",!1),t.DomUtils.setAttr(this.$dropboxContainerTop,"tabindex","0"),t.DomUtils.setAria(this.$dropboxContainerTop,"hidden",!1),t.DomUtils.setAttr(this.$dropboxContainerBottom,"tabindex","0"),t.DomUtils.setAria(this.$dropboxContainerBottom,"hidden",!1),e?t.DomUtils.setStyle(this.$dropboxContainer,"display","inline-flex"):(t.DomUtils.dispatchEvent(this.$ele,"beforeOpen"),t.DomUtils.setAria(this.$wrapper,"expanded",!0)),this.setDropboxWrapperWidth(),t.DomUtils.removeClass(this.$allWrappers,"closed"),t.DomUtils.changeTabIndex(this.$allWrappers,0),this.dropboxPopover&&!e?this.dropboxPopover.show():this.afterShowPopper()}},{key:"afterShowPopper",value:function(){var e=this.isSilentOpen;this.isSilentOpen=!1,e||(this.moveSelectedOptionsFirst(),this.setScrollTop(),t.DomUtils.addClass(this.$allWrappers,"focused"),this.showAsPopup?(t.DomUtils.addClass(this.$body,"vscomp-popup-active"),this.isPopupActive=!0):this.focusElementOnOpen(),t.DomUtils.dispatchEvent(this.$ele,"afterOpen"))}},{key:"closeDropbox",value:function(e){this.isSilentClose=e,!1!==this.isOpened()&&(this.keepAlwaysOpen?this.removeOptionFocus():(e?t.DomUtils.setStyle(this.$dropboxContainer,"display",""):(t.DomUtils.dispatchEvent(this.$ele,"beforeClose"),t.DomUtils.setAria(this.$wrapper,"expanded",!1),t.DomUtils.setAria(this.$wrapper,"activedescendant","")),this.dropboxPopover&&!e?(this.dropboxPopover.hide(),t.DomUtils.setAttr(this.$dropboxWrapper,"tabindex","-1"),t.DomUtils.setAria(this.$dropboxWrapper,"hidden",!0),t.DomUtils.setAttr(this.$dropboxContainerTop,"tabindex","-1"),t.DomUtils.setAria(this.$dropboxContainerTop,"hidden",!0),t.DomUtils.setAttr(this.$dropboxContainerBottom,"tabindex","-1"),t.DomUtils.setAria(this.$dropboxContainerBottom,"hidden",!0)):this.afterHidePopper()))}},{key:"afterHidePopper",value:function(){var e=this.isSilentClose;this.isSilentClose=!1,t.DomUtils.removeClass(this.$allWrappers,"focused"),this.removeOptionFocus(),!e&&this.isPopupActive&&(t.DomUtils.removeClass(this.$body,"vscomp-popup-active"),this.isPopupActive=!1),t.DomUtils.addClass(this.$allWrappers,"closed"),e||t.DomUtils.dispatchEvent(this.$ele,"afterClose"),this.$wrapper.focus(),t.DomUtils.setAttr(this.$dropboxWrapper,"tabindex","-1"),t.DomUtils.setAria(this.$dropboxWrapper,"hidden",!0),t.DomUtils.setAttr(this.$dropboxContainerTop,"tabindex","-1"),t.DomUtils.setAria(this.$dropboxContainerTop,"hidden",!0),t.DomUtils.setAttr(this.$dropboxContainerBottom,"tabindex","-1"),t.DomUtils.setAria(this.$dropboxContainerBottom,"hidden",!0)}},{key:"moveSelectedOptionsFirst",value:function(){this.$optionsContainer.scrollTop&&this.selectedValues.length||this.setVisibleOptions(),this.showSelectedOptionsFirst&&(this.setSortedOptions(),this.scrollToTop())}},{key:"toggleDropbox",value:function(){this.isOpened()?this.closeDropbox():this.openDropbox()}},{key:"updatePosition",value:function(){this.dropboxPopover&&this.isOpened()&&this.$ele.updatePosition()}},{key:"isOpened",value:function(){return!t.DomUtils.hasClass(this.$wrapper,"closed")}},{key:"focusSearchInput",value:function(){var e=this.$searchInput;e&&e.focus()}},{key:"focusElementOnOpen",value:function(){var e=this.$searchInput,i=!this.options.length&&!this.hasServerSearch;if(e)i&&!this.allowNewOption?(t.DomUtils.setAttr(e,"disabled",""),this.$noOptions.focus()):(e.removeAttribute("disabled"),e.focus());else{var o=this.$dropbox.querySelector('[tabindex="0"]');void 0!==t.DomUtils.getData(o,"index")?this.focusOption({direction:"next"}):o?o.focus():this.focusFirstVisibleOption()}}},{key:"focusFirstVisibleOption",value:function(){var e=this.$optionsContainer.querySelector("[data-index='".concat(this.getFirstVisibleOptionIndex(),"']"));e?(t.DomUtils.hasClass(e,"group-title")&&(e=this.getSibling(e,"next")),t.DomUtils.setAttr(e,"tabindex","0"),this.$optionsContainer.scrollTop=this.optionHeight*this.getFirstVisibleOptionIndex(),this.focusOption({focusFirst:!0}),e.focus()):(e=this.$dropbox.querySelector('[tabindex="0"]'))&&e.focus()}},{key:"focusOption",value:function(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=i.direction,s=i.$option,n=i.focusFirst,r=this.$dropboxContainer.querySelector(".vscomp-option.focused");if(s)e=s;else if(!r||n){var a=this.getFirstVisibleOptionIndex();e=this.$dropboxContainer.querySelector('.vscomp-option[data-visible-index="'.concat(a,'"]')),(t.DomUtils.hasClass(e,"disabled")||t.DomUtils.hasClass(e,"group-title"))&&(e=this.getSibling(e,"next"))}else e=this.getSibling(r,o);e&&e!==r&&(r&&this.toggleOptionFocusedState(r,!1),this.toggleOptionFocusedState(e,!0),this.toggleFocusedProp(t.DomUtils.getData(e,"index"),!0),this.moveFocusedOptionToView(e))}},{key:"moveFocusedOptionToView",value:function(e){var i=e||this.$dropboxContainer.querySelector(".vscomp-option.focused");if(i){var o,s=this.$optionsContainer.getBoundingClientRect(),n=i.getBoundingClientRect(),r=s.top,a=s.bottom,l=s.height,u=n.top,c=n.bottom,p=n.height,h=i.offsetTop,d=t.DomUtils.getData(this.$options,"top","number");r>u?o=h+d:a<c&&(o=h-l+p+d),void 0!==o&&(this.$optionsContainer.scrollTop=o)}}},{key:"removeOptionFocus",value:function(){var e=this.$dropboxContainer.querySelector(".vscomp-option.focused");e&&(this.toggleOptionFocusedState(e,!1),this.toggleFocusedProp(null))}},{key:"selectOption",value:function(e){var i=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).event;if(e){var o=!t.DomUtils.hasClass(e,"selected");if(o){if(this.multiple&&this.isMaxValuesSelected)return}else if(!this.multiple)return void this.closeDropbox();var s=this.selectedValues,n=t.DomUtils.getData(e,"value"),r=t.DomUtils.getData(e,"index","number"),a=t.DomUtils.hasClass(e,"current-new"),l=!1,u=this.lastSelectedOptionIndex;if(this.lastSelectedOptionIndex=null,this.toggleSelectedProp(r,o),o){if(this.multiple)s.push(n),this.toggleAllOptionsClass(),this.toggleGroupOptionsParent(e),i&&i.shiftKey&&(l=!0);else{s.length&&this.toggleSelectedProp(this.getOptionIndex(s[0]),!1),s=[n];var c=this.$dropboxContainer.querySelector(".vscomp-option.selected");c&&this.toggleOptionSelectedState(c,!1),this.closeDropbox(),a||this.setSearchValue("")}this.lastSelectedOptionIndex=r,this.toggleOptionSelectedState(e)}else this.multiple&&(this.toggleOptionSelectedState(e),t.Utils.removeItemFromArray(s,n),this.toggleAllOptionsClass(!1),this.toggleGroupOptionsParent(e,!1));a&&this.beforeSelectNewValue(),this.setValue(s),l&&this.selectRangeOptions(u,r)}}},{key:"selectFocusedOption",value:function(){this.selectOption(this.$dropboxContainer.querySelector(".vscomp-option.focused"))}},{key:"selectRangeOptions",value:function(e,t){var i=this;if("number"==typeof e&&!this.maxValues){var o,s,n=this.selectedValues,r=this.hasOptionGroup,a={};if(e<t?(o=e,s=t):(o=t,s=e),this.options.forEach((function(e){if(!e.isDisabled&&!e.isGroupTitle&&e.isVisible&&!e.isSelected){var t=e.index;if(t>o&&t<s){if(r){var i=e.groupIndex;"number"==typeof i&&(a[i]=!0)}e.isSelected=!0,n.push(e.value)}}})),this.toggleAllOptionsClass(),this.setValue(n),(a=Object.keys(a)).length){var l=this.toggleGroupTitleProp.bind(this);a.forEach((function(e){l(parseInt(e))}))}setTimeout((function(){i.renderOptions()}),0)}}},{key:"toggleAllOptions",value:function(e){if(this.multiple&&!this.disableSelectAll){var i="boolean"==typeof isSelected?e:!t.DomUtils.hasClass(this.$toggleAllCheckbox,"checked"),o=[],s=this.selectAllOnlyVisible;this.options.forEach((function(e){var t=e;if(!t.isDisabled&&!t.isCurrentNew){var n=t.isVisible,r=t.isSelected;!i&&(!s||n||!r)||i&&s&&!n&&!r?t.isSelected=!1:(t.isSelected=!0,t.isGroupTitle||o.push(t.value))}})),this.toggleAllOptionsClass(i),this.setValue(o),this.renderOptions()}}},{key:"toggleAllOptionsClass",value:function(e){if(this.multiple){var i=!1;"boolean"==typeof e||(e=this.isAllOptionsSelected()),!e&&this.selectAllOnlyVisible&&""!==this.searchValue&&(this.visibleOptionsCount>0||""===this.searchValue)&&(i=this.isAllOptionsSelected(!0)),t.DomUtils.toggleClass(this.$toggleAllCheckbox,"checked",e||i),this.isAllSelected=e}}},{key:"isAllOptionsSelected",value:function(e){var t=!1;return this.options.length&&this.selectedValues.length&&(t=!this.options.some((function(t){return!t.isSelected&&!t.isDisabled&&!t.isGroupTitle&&(!e||t.isVisible)}))),t}},{key:"isAllGroupOptionsSelected",value:function(e){var t=!1;return this.options.length&&(t=!this.options.some((function(t){return!t.isSelected&&!t.isDisabled&&!t.isGroupTitle&&t.groupIndex===e}))),t}},{key:"toggleGroupOptionsParent",value:function(e,i){if(this.hasOptionGroup&&!this.disableOptionGroupCheckbox&&e){var o=t.DomUtils.getData(e,"groupIndex");void 0!==o&&(o=parseInt(o));var s=this.$options.querySelector('.vscomp-option[data-index="'.concat(o,'"]')),n="boolean"==typeof i?i:this.isAllGroupOptionsSelected(o);this.toggleGroupTitleCheckbox(s,n),this.toggleGroupTitleProp(o,n)}}},{key:"toggleGroupTitleProp",value:function(e,t){var i="boolean"==typeof t?t:this.isAllGroupOptionsSelected(e);this.toggleSelectedProp(e,i)}},{key:"toggleGroupOptions",value:function(e,i){var o=this;if(this.hasOptionGroup&&!this.disableOptionGroupCheckbox&&e){var s=t.DomUtils.getData(e,"index","number"),n=this.selectedValues,r=this.selectAllOnlyVisible,a={},l=t.Utils.removeItemFromArray;n.forEach((function(e){a[e]=!0})),this.options.forEach((function(e){if(!e.isDisabled&&e.groupIndex===s){var t=e.value;!i||r&&!e.isVisible?(e.isSelected=!1,a[t]&&l(n,t)):(e.isSelected=!0,a[t]||n.push(t))}})),this.toggleAllOptionsClass(!!i&&null),this.setValue(n),setTimeout((function(){o.renderOptions()}),0)}}},{key:"toggleGroupTitleCheckbox",value:function(e,i){if(e){var o=t.DomUtils.getData(e,"index","number");this.toggleSelectedProp(o,i),this.toggleOptionSelectedState(e,i)}}},{key:"toggleFocusedProp",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.focusedOptionIndex&&this.setOptionProp(this.focusedOptionIndex,"isFocused",!1),this.setOptionProp(e,"isFocused",t),this.focusedOptionIndex=e}},{key:"toggleSelectedProp",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.setOptionProp(e,"isSelected",t)}},{key:"scrollToTop",value:function(){this.$optionsContainer.scrollTop>0&&(this.$optionsContainer.scrollTop=0)}},{key:"reset",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.options.forEach((function(e){e.isSelected=!1})),this.beforeValueSet(!0),this.setValue(null,{disableEvent:i,disableValidation:e}),this.afterValueSet(),e&&t.DomUtils.removeClass(this.$allWrappers,"has-error"),t.DomUtils.dispatchEvent(this.$ele,"reset")}},{key:"addOption",value:function(e,t){if(e){this.lastOptionIndex+=1;var i=this.getOptionObj(s(s({},e),{},{index:this.lastOptionIndex}));this.options.push(i),this.sortedOptions.push(i),t&&(this.visibleOptionsCount+=1,this.afterSetOptions())}}},{key:"removeOption",value:function(e){(e||0===e)&&(this.options.splice(e,1),this.lastOptionIndex-=1)}},{key:"removeNewOption",value:function(){var e=this.getNewOption();e&&this.removeOption(e.index)}},{key:"sortOptions",value:function(e){return e.sort((function(e,t){var i=e.isSelected||e.isAnySelected,o=t.isSelected||t.isAnySelected;return i||o?i&&(!o||e.index<t.index)?-1:1:0}))}},{key:"sortOptionsGroup",value:function(e){var t=this.sortOptions.bind(this),i=this.structureOptionGroup(e);return i.forEach((function(e){var i=e.options;e.isAnySelected=i.some((function(e){return e.isSelected})),e.isAnySelected&&t(i)})),t(i),this.destructureOptionGroup(i)}},{key:"isOptionVisible",value:function(e){var t=e.data,i=e.searchValue,o=e.hasExactOption,s=e.visibleOptionGroupsMapping,n=e.searchGroup,r=e.searchByStartsWith,a=t.value.toLowerCase(),l=this.searchNormalize?t.labelNormalized:t.label.toLowerCase(),u=t.description,c=t.alias,p=r?l.startsWith(i):l.includes(i);return!t.isGroupTitle||n&&p||(p=s[t.index]),r||!c||p||(p=c.includes(i)),r||!u||p||(p=u.toLowerCase().includes(i)),t.isVisible=p,o||(o=l===i||a===i),{isVisible:p,hasExactOption:o}}},{key:"structureOptionGroup",value:function(e){var t=[],i={};return e.forEach((function(e){if(e.isGroupTitle){var o=[];e.options=o,i[e.index]=o,t.push(e)}})),e.forEach((function(e){e.isGroupOption&&i[e.groupIndex].push(e)})),t}},{key:"destructureOptionGroup",value:function(e){var t=[];return e.forEach((function(e){t.push(e),t=t.concat(e.options)})),t}},{key:"serverSearch",value:function(){t.DomUtils.removeClass(this.$allWrappers,"has-no-search-results"),t.DomUtils.addClass(this.$allWrappers,"server-searching"),this.setSelectedOptions(),this.onServerSearch(this.searchValue,this)}},{key:"removeValue",value:function(e){var i=this.selectedValues,o=t.DomUtils.getData(e,"value");t.Utils.removeItemFromArray(i,o),this.setValueMethod(i)}},{key:"focus",value:function(){this.$wrapper.focus()}},{key:"enable",value:function(){this.$ele.disabled=!1,this.$ele.removeAttribute("disabled"),this.$hiddenInput.removeAttribute("disabled"),t.DomUtils.setAria(this.$wrapper,"disabled",!1),t.DomUtils.changeTabIndex(this.$wrapper,0)}},{key:"disable",value:function(){this.$ele.disabled=!0,this.$ele.setAttribute("disabled",""),this.$hiddenInput.setAttribute("disabled",""),t.DomUtils.setAria(this.$wrapper,"disabled",!0),t.DomUtils.changeTabIndex(this.$wrapper,-1),this.$wrapper.blur()}},{key:"validate",value:function(){if(this.disableValidation)return!0;var e=!1,i=this.selectedValues,o=this.minValues;return this.required&&(t.Utils.isEmpty(i)||this.multiple&&o&&i.length<o)&&(e=!0),t.DomUtils.toggleClass(this.$allWrappers,"has-error",e),!e}},{key:"destroy",value:function(){var e=this.$ele;e.virtualSelect=void 0,e.value=void 0,e.innerHTML="",this.removeEvents(),this.hasDropboxWrapper&&this.$dropboxWrapper.remove(),this.dropboxPopover&&this.dropboxPopover.destroy(),t.DomUtils.removeClass(e,"vscomp-ele")}},{key:"createSecureTextElements",value:function(){this.$secureDiv=document.createElement("div"),this.$secureText=document.createTextNode(""),this.$secureDiv.appendChild(this.$secureText)}},{key:"secureText",value:function(e){return e&&this.enableSecureText?(this.$secureText.nodeValue=t.Utils.replaceDoubleQuotesWithHTML(e),this.$secureDiv.innerHTML):e}},{key:"toggleRequired",value:function(e){this.required=t.Utils.convertToBoolean(e),this.$ele.required=this.required}},{key:"toggleOptionSelectedState",value:function(e,i){var o=i;void 0===o&&(o=!t.DomUtils.hasClass(e,"selected")),t.DomUtils.toggleClass(e,"selected",o),t.DomUtils.setAria(e,"selected",o)}},{key:"toggleOptionFocusedState",value:function(e,i){e&&(t.DomUtils.toggleClass(e,"focused",i),t.DomUtils.setAttr(e,"tabindex",i?"0":"-1"),document.activeElement!==this.$searchInput&&e.focus(),i&&t.DomUtils.setAria(this.$wrapper,"activedescendant",e.id))}}],u=[{key:"init",value:function(t){var i=t.ele;if(i){var o=!1;if("string"==typeof i){var s=(i=document.querySelectorAll(i)).length;if(0===s)return;1===s&&(o=!0)}void 0!==i.length&&void 0!==i.forEach||(i=[i],o=!0);var n=[];return i.forEach((function(i){i.virtualSelect?n.push(i.virtualSelect):(t.ele=i,"SELECT"===i.tagName&&e.setPropsFromSelect(t),n.push(new e(t)))})),o?n[0]:n}}},{key:"getAttrProps",value:function(){var e=t.DomUtils.convertPropToDataAttr,i={};return m.forEach((function(e){i[e]=e})),y.forEach((function(t){i[e(t)]=t})),i}},{key:"setPropsFromSelect",value:function(e){var i=e.ele,o=[],s=[],n=function(e){var t=[];return Array.from(e.children).forEach((function(e){var i=e.value,r={value:i};"OPTGROUP"===e.tagName?(r.label=e.getAttribute("label"),r.options=n(e)):r.label=e.innerHTML,t.push(r),e.disabled&&o.push(i),e.selected&&s.push(i)})),t},r=n(i),a=document.createElement("div");t.DomUtils.setAttrFromEle(i,a,Object.keys(d),f),i.parentNode.insertBefore(a,i),i.remove(),e.ele=a,e.options=r,e.disabledOptions=o,e.selectedValue=s}},{key:"onFormReset",value:function(e){var t=e.target.closest("form");t&&t.querySelectorAll(".vscomp-ele-wrapper").forEach((function(e){e.parentElement.virtualSelect.reset(!0)}))}},{key:"onFormSubmit",value:function(t){e.validate(t.target.closest("form"))||t.preventDefault()}},{key:"validate",value:function(e){if(!e)return!0;var t=!1;return e.querySelectorAll(".vscomp-ele-wrapper").forEach((function(e){var i=e.parentElement.virtualSelect.validate();t||i||(t=!0)})),!t}},{key:"reset",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.virtualSelect.reset(e,t)}},{key:"setValueMethod",value:function(){var e;(e=this.virtualSelect).setValueMethod.apply(e,arguments)}},{key:"setOptionsMethod",value:function(){var e;(e=this.virtualSelect).setOptionsMethod.apply(e,arguments)}},{key:"setDisabledOptionsMethod",value:function(){var e;(e=this.virtualSelect).setDisabledOptionsMethod.apply(e,arguments)}},{key:"setEnabledOptionsMethod",value:function(){var e;(e=this.virtualSelect).setEnabledOptionsMethod.apply(e,arguments)}},{key:"toggleSelectAll",value:function(e){this.virtualSelect.toggleAllOptions(e)}},{key:"isAllSelected",value:function(){return this.virtualSelect.isAllSelected}},{key:"addOptionMethod",value:function(e){this.virtualSelect.addOption(e,!0)}},{key:"getNewValueMethod",value:function(){return this.virtualSelect.getNewValue()}},{key:"getDisplayValueMethod",value:function(){return this.virtualSelect.getDisplayValue()}},{key:"getSelectedOptionsMethod",value:function(e){return this.virtualSelect.getSelectedOptions(e)}},{key:"getDisabledOptionsMethod",value:function(){return this.virtualSelect.getDisabledOptions()}},{key:"openMethod",value:function(){return this.virtualSelect.openDropbox()}},{key:"closeMethod",value:function(){return this.virtualSelect.closeDropbox()}},{key:"focusMethod",value:function(){return this.virtualSelect.focus()}},{key:"enableMethod",value:function(){return this.virtualSelect.enable()}},{key:"disableMethod",value:function(){return this.virtualSelect.disable()}},{key:"destroyMethod",value:function(){return this.virtualSelect.destroy()}},{key:"validateMethod",value:function(){return this.virtualSelect.validate()}},{key:"toggleRequiredMethod",value:function(e){return this.virtualSelect.toggleRequired(e)}},{key:"onResizeMethod",value:function(){document.querySelectorAll(".vscomp-ele-wrapper").forEach((function(e){e.parentElement.virtualSelect.onResize()}))}}],o&&p(i.prototype,o),u&&p(i,u),Object.defineProperty(i,"prototype",{writable:!1}),i;var i,o,u}();document.addEventListener("reset",b.onFormReset),document.addEventListener("submit",b.onFormSubmit),window.addEventListener("resize",b.onResizeMethod),d=b.getAttrProps(),window.VirtualSelect=b,"undefined"!=typeof NodeList&&NodeList.prototype&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach)}(),function(){"use strict";function e(e){return function(e){if(Array.isArray(e))return t(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,i){if(e){if("string"==typeof e)return t(e,i);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,i):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,o=new Array(t);i<t;i++)o[i]=e[i];return o}var i=function(){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t)}var i;return i=[{key:"addClass",value:function(i,o){i&&(o=o.split(" "),t.getElements(i).forEach((function(t){var i;(i=t.classList).add.apply(i,e(o))})))}},{key:"removeClass",value:function(i,o){i&&(o=o.split(" "),t.getElements(i).forEach((function(t){var i;(i=t.classList).remove.apply(i,e(o))})))}},{key:"getElements",value:function(e){if(e)return void 0===e.forEach&&(e=[e]),e}},{key:"getMoreVisibleSides",value:function(e){if(!e)return{};var t=e.getBoundingClientRect(),i=window.innerWidth,o=window.innerHeight,s=t.left,n=t.top;return{horizontal:s>i-s-t.width?"left":"right",vertical:n>o-n-t.height?"top":"bottom"}}},{key:"getAbsoluteCoords",value:function(e){if(e){var t=e.getBoundingClientRect(),i=window.pageXOffset,o=window.pageYOffset;return{width:t.width,height:t.height,top:t.top+o,right:t.right+i,bottom:t.bottom+o,left:t.left+i}}}},{key:"getCoords",value:function(e){return e?e.getBoundingClientRect():{}}},{key:"getData",value:function(e,t,i){if(e){var o=e?e.dataset[t]:"";return"number"===i?o=parseFloat(o)||0:"true"===o?o=!0:"false"===o&&(o=!1),o}}},{key:"setData",value:function(e,t,i){e&&(e.dataset[t]=i)}},{key:"setStyle",value:function(e,t,i){e&&(e.style[t]=i)}},{key:"show",value:function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"block";t.setStyle(e,"display",i)}},{key:"hide",value:function(e){t.setStyle(e,"display","none")}},{key:"getHideableParent",value:function(e){for(var t,i=e.parentElement;i;){var o=getComputedStyle(i).overflow;if(-1!==o.indexOf("scroll")||-1!==o.indexOf("auto")){t=i;break}i=i.parentElement}return t}}],i&&function(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}(t,i),t}(),o=["top","bottom","left","right"].map((function(e){return"position-".concat(e)})),s={top:"rotate(180deg)",left:"rotate(90deg)",right:"rotate(-90deg)"},n=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);try{this.setProps(t),this.init()}catch(e){console.warn("Couldn't initiate popper"),console.error(e)}}var t;return t=[{key:"init",value:function(){var e=this.$popperEle;e&&this.$triggerEle&&(i.setStyle(e,"zIndex",this.zIndex),this.setPosition())}},{key:"setProps",value:function(e){var t=(e=this.setDefaultProps(e)).position?e.position.toLowerCase():"auto";if(this.$popperEle=e.$popperEle,this.$triggerEle=e.$triggerEle,this.$arrowEle=e.$arrowEle,this.margin=parseFloat(e.margin),this.offset=parseFloat(e.offset),this.enterDelay=parseFloat(e.enterDelay),this.exitDelay=parseFloat(e.exitDelay),this.showDuration=parseFloat(e.showDuration),this.hideDuration=parseFloat(e.hideDuration),this.transitionDistance=parseFloat(e.transitionDistance),this.zIndex=parseFloat(e.zIndex),this.afterShowCallback=e.afterShow,this.afterHideCallback=e.afterHide,this.hasArrow=!!this.$arrowEle,-1!==t.indexOf(" ")){var i=t.split(" ");this.position=i[0],this.secondaryPosition=i[1]}else this.position=t}},{key:"setDefaultProps",value:function(e){return Object.assign({position:"auto",margin:8,offset:5,enterDelay:0,exitDelay:0,showDuration:300,hideDuration:200,transitionDistance:10,zIndex:1},e)}},{key:"setPosition",value:function(){i.show(this.$popperEle,"inline-flex");var e,t,n,r=window.innerWidth,a=window.innerHeight,l=i.getAbsoluteCoords(this.$popperEle),u=i.getAbsoluteCoords(this.$triggerEle),c=l.width,p=l.height,h=l.top,d=l.right,v=l.bottom,f=l.left,m=u.width,y=u.height,b=u.top,g=u.right,O=u.bottom,S=u.left,x=b-h,w=S-f,k=w,D=x,C=this.position,E=this.secondaryPosition,$=m/2-c/2,A=y/2-p/2,T=this.margin,V=this.transitionDistance,P=window.scrollY-h,U=a+P,I=window.scrollX-f,M=r+I,L=this.offset;L&&(P+=L,U-=L,I+=L,M-=L),"auto"===C&&(C=i.getMoreVisibleSides(this.$triggerEle).vertical);var F={top:{top:D-p-T,left:k+$},bottom:{top:D+y+T,left:k+$},right:{top:D+A,left:k+m+T},left:{top:D+A,left:k-c-T}},B=F[C];if(D=B.top,k=B.left,E&&("top"===E?D=x:"bottom"===E?D=x+y-p:"left"===E?k=w:"right"===E&&(k=w+m-c)),k<I?"left"===C?n="right":k=I+f>g?g-f:I:k+c>M&&("right"===C?n="left":k=M+f<S?S-d:M-c),D<P?"top"===C?n="bottom":D=P+h>O?O-h:P:D+p>U&&("bottom"===C?n="top":D=U+h<b?b-v:U-p),n){var j=F[n];"top"===(C=n)||"bottom"===C?D=j.top:"left"!==C&&"right"!==C||(k=j.left)}"top"===C?(e=D+V,t=k):"right"===C?(e=D,t=k-V):"left"===C?(e=D,t=k+V):(e=D-V,t=k);var W="translate3d(".concat(parseInt(t),"px, ").concat(parseInt(e),"px, 0)");if(i.setStyle(this.$popperEle,"transform",W),i.setData(this.$popperEle,"fromLeft",t),i.setData(this.$popperEle,"fromTop",e),i.setData(this.$popperEle,"top",D),i.setData(this.$popperEle,"left",k),i.removeClass(this.$popperEle,o.join(" ")),i.addClass(this.$popperEle,"position-".concat(C)),this.hasArrow){var H=0,G=0,N=k+f,q=D+h,R=this.$arrowEle.offsetWidth/2,z=s[C]||"";"top"===C||"bottom"===C?(H=m/2+S-N)<R?H=R:H>c-R&&(H=c-R):"left"!==C&&"right"!==C||((G=y/2+b-q)<R?G=R:G>p-R&&(G=p-R)),i.setStyle(this.$arrowEle,"transform","translate3d(".concat(parseInt(H),"px, ").concat(parseInt(G),"px, 0) ").concat(z))}i.hide(this.$popperEle)}},{key:"resetPosition",value:function(){i.setStyle(this.$popperEle,"transform","none"),this.setPosition()}},{key:"show",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=t.resetPosition,s=t.data;clearTimeout(this.exitDelayTimeout),clearTimeout(this.hideDurationTimeout),o&&this.resetPosition(),this.enterDelayTimeout=setTimeout((function(){var t=i.getData(e.$popperEle,"left"),o=i.getData(e.$popperEle,"top"),n="translate3d(".concat(parseInt(t),"px, ").concat(parseInt(o),"px, 0)"),r=e.showDuration;i.show(e.$popperEle,"inline-flex"),i.getCoords(e.$popperEle),i.setStyle(e.$popperEle,"transitionDuration",r+"ms"),i.setStyle(e.$popperEle,"transform",n),i.setStyle(e.$popperEle,"opacity",1),e.showDurationTimeout=setTimeout((function(){"function"==typeof e.afterShowCallback&&e.afterShowCallback(s)}),r)}),this.enterDelay)}},{key:"hide",value:function(){var e=this,t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).data;clearTimeout(this.enterDelayTimeout),clearTimeout(this.showDurationTimeout),this.exitDelayTimeout=setTimeout((function(){if(e.$popperEle){var o=parseInt(i.getData(e.$popperEle,"fromLeft")),s=parseInt(i.getData(e.$popperEle,"fromTop")),n="translate3d(".concat(o,"px, ").concat(s,"px, 0)"),r=e.hideDuration;i.setStyle(e.$popperEle,"transitionDuration",r+"ms"),i.setStyle(e.$popperEle,"transform",n),i.setStyle(e.$popperEle,"opacity",0),e.hideDurationTimeout=setTimeout((function(){i.hide(e.$popperEle),"function"==typeof e.afterHideCallback&&e.afterHideCallback(t)}),r)}}),this.exitDelay)}},{key:"updatePosition",value:function(){i.setStyle(this.$popperEle,"transitionDuration","0ms"),this.resetPosition();var e=parseInt(i.getData(this.$popperEle,"left")),t=parseInt(i.getData(this.$popperEle,"top"));i.show(this.$popperEle,"inline-flex"),i.setStyle(this.$popperEle,"transform","translate3d(".concat(e,"px, ").concat(t,"px, 0)"))}}],t&&function(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}(e.prototype,t),e}();window.PopperComponent=n}(),function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t){for(var o=0;o<t.length;o++){var s=t[o];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,i(s.key),s)}}function i(t){var i=function(t){if("object"!=e(t)||!t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var o=i.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(i)?i:i+""}var o=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},i=[{key:"convertToBoolean",value:function(e){return!0===e||"true"===e||!1!==e&&"false"!==e&&arguments.length>1&&void 0!==arguments[1]&&arguments[1]}},{key:"removeArrayEmpty",value:function(e){return Array.isArray(e)&&e.length?e.filter((function(e){return!!e})):[]}},{key:"throttle",value:function(e,t){var i,o=0;return function(){for(var s=arguments.length,n=new Array(s),r=0;r<s;r++)n[r]=arguments[r];var a=(new Date).getTime(),l=t-(a-o);clearTimeout(i),l<=0?(o=a,e.apply(void 0,n)):i=setTimeout((function(){e.apply(void 0,n)}),l)}}}],i&&t(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,i}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?r(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,o=new Array(t);i<t;i++)o[i]=e[i];return o}function a(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,l(o.key),o)}}function l(e){var t=function(e){if("object"!=s(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var i=t.call(e,"string");if("object"!=s(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==s(t)?t:t+""}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,i=[{key:"addClass",value:function(t,i){t&&(i=i.split(" "),e.getElements(t).forEach((function(e){var t;(t=e.classList).add.apply(t,n(i))})))}},{key:"removeClass",value:function(t,i){t&&(i=i.split(" "),e.getElements(t).forEach((function(e){var t;(t=e.classList).remove.apply(t,n(i))})))}},{key:"hasClass",value:function(e,t){return!!e&&e.classList.contains(t)}},{key:"getElement",value:function(e){return e&&("string"==typeof e?e=document.querySelector(e):void 0!==e.length&&(e=e[0])),e||null}},{key:"getElements",value:function(e){if(e)return void 0===e.forEach&&(e=[e]),e}},{key:"addEvent",value:function(t,i,o){e.addOrRemoveEvent(t,i,o,"add")}},{key:"removeEvent",value:function(t,i,o){e.addOrRemoveEvent(t,i,o,"remove")}},{key:"addOrRemoveEvent",value:function(t,i,s,n){t&&(i=o.removeArrayEmpty(i.split(" "))).forEach((function(i){(t=e.getElements(t)).forEach((function(e){"add"===n?e.addEventListener(i,s):e.removeEventListener(i,s)}))}))}},{key:"getScrollableParents",value:function(e){if(!e)return[];for(var t=[window],i=e.parentElement;i;){var o=getComputedStyle(i).overflow;-1===o.indexOf("scroll")&&-1===o.indexOf("auto")||t.push(i),i=i.parentElement}return t}},{key:"convertPropToDataAttr",value:function(e){return e?"data-popover-".concat(e).replace(/([A-Z])/g,"-$1").toLowerCase():""}}],i&&a(t,i),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,i}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function p(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,h(o.key),o)}}function h(e){var t=function(e){if("object"!=c(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var i=t.call(e,"string");if("object"!=c(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var d,v={27:"onEscPress"},f=["target","position","margin","offset","enterDelay","exitDelay","showDuration","hideDuration","transitionDistance","updatePositionThrottle","zIndex","hideOnOuterClick","showOnHover","hideArrowIcon","disableManualAction","disableUpdatePosition"],m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);try{this.setProps(t),this.init()}catch(e){console.warn("Couldn't initiate Popover component"),console.error(e)}}return t=e,s=[{key:"init",value:function(t){var i=t.ele;if(i){var o=!1;if("string"==typeof i){if(!(i=document.querySelectorAll(i)))return;1===i.length&&(o=!0)}void 0===i.length&&(i=[i],o=!0);var s=[];return i.forEach((function(i){t.ele=i,e.destroy(i),s.push(new e(t))})),o?s[0]:s}}},{key:"destroy",value:function(e){if(e){var t=e.popComp;t&&t.destroy()}}},{key:"showMethod",value:function(){this.popComp.show()}},{key:"hideMethod",value:function(){this.popComp.hide()}},{key:"updatePositionMethod",value:function(){this.popComp.popper.updatePosition()}},{key:"getAttrProps",value:function(){var e=u.convertPropToDataAttr,t={};return f.forEach((function(i){t[e(i)]=i})),t}}],(i=[{key:"init",value:function(){this.$popover&&(this.setElementProps(),this.renderArrow(),this.initPopper(),this.addEvents())}},{key:"getEvents",value:function(){var e=[{$ele:document,event:"click",method:"onDocumentClick"},{$ele:document,event:"keydown",method:"onDocumentKeyDown"}];return this.disableManualAction||(e.push({$ele:this.$ele,event:"click",method:"onTriggerEleClick"}),this.showOnHover&&(e.push({$ele:this.$ele,event:"mouseenter",method:"onTriggerEleMouseEnter"}),e.push({$ele:this.$ele,event:"mouseleave",method:"onTriggerEleMouseLeave"}))),e}},{key:"addOrRemoveEvents",value:function(e){var t=this;this.getEvents().forEach((function(i){t.addOrRemoveEvent({action:e,$ele:i.$ele,events:i.event,method:i.method})}))}},{key:"addEvents",value:function(){this.addOrRemoveEvents("add")}},{key:"removeEvents",value:function(){this.addOrRemoveEvents("remove"),this.removeScrollEventListeners(),this.removeResizeEventListeners()}},{key:"addOrRemoveEvent",value:function(e){var t=this,i=e.action,s=e.$ele,n=e.events,r=e.method,a=e.throttle;s&&(n=o.removeArrayEmpty(n.split(" "))).forEach((function(e){var n="".concat(r,"-").concat(e),l=t.events[n];l||(l=t[r].bind(t),a&&(l=o.throttle(l,a)),t.events[n]=l),"add"===i?u.addEvent(s,e,l):u.removeEvent(s,e,l)}))}},{key:"addScrollEventListeners",value:function(){this.$scrollableElems=u.getScrollableParents(this.$ele),this.addOrRemoveEvent({action:"add",$ele:this.$scrollableElems,events:"scroll",method:"onAnyParentScroll",throttle:this.updatePositionThrottle})}},{key:"removeScrollEventListeners",value:function(){this.$scrollableElems&&(this.addOrRemoveEvent({action:"remove",$ele:this.$scrollableElems,events:"scroll",method:"onAnyParentScroll"}),this.$scrollableElems=null)}},{key:"addResizeEventListeners",value:function(){this.addOrRemoveEvent({action:"add",$ele:window,events:"resize",method:"onResize",throttle:this.updatePositionThrottle})}},{key:"removeResizeEventListeners",value:function(){this.addOrRemoveEvent({action:"remove",$ele:window,events:"resize",method:"onResize"})}},{key:"onAnyParentScroll",value:function(){this.popper.updatePosition()}},{key:"onResize",value:function(){this.popper.updatePosition()}},{key:"onDocumentClick",value:function(e){var t=e.target,i=t.closest(".pop-comp-ele"),o=t.closest(".pop-comp-wrapper");this.hideOnOuterClick&&i!==this.$ele&&o!==this.$popover&&this.hide()}},{key:"onDocumentKeyDown",value:function(e){var t=e.which||e.keyCode,i=v[t];i&&this[i](e)}},{key:"onEscPress",value:function(){this.hideOnOuterClick&&this.hide()}},{key:"onTriggerEleClick",value:function(){this.toggle()}},{key:"onTriggerEleMouseEnter",value:function(){this.show()}},{key:"onTriggerEleMouseLeave",value:function(){this.hide()}},{key:"setProps",value:function(e){e=this.setDefaultProps(e),this.setPropsFromElementAttr(e);var t=o.convertToBoolean;this.$ele=e.ele,this.target=e.target,this.position=e.position,this.margin=parseFloat(e.margin),this.offset=parseFloat(e.offset),this.enterDelay=parseFloat(e.enterDelay),this.exitDelay=parseFloat(e.exitDelay),this.showDuration=parseFloat(e.showDuration),this.hideDuration=parseFloat(e.hideDuration),this.transitionDistance=parseFloat(e.transitionDistance),this.updatePositionThrottle=parseFloat(e.updatePositionThrottle),this.zIndex=parseFloat(e.zIndex),this.hideOnOuterClick=t(e.hideOnOuterClick),this.showOnHover=t(e.showOnHover),this.hideArrowIcon=t(e.hideArrowIcon),this.disableManualAction=t(e.disableManualAction),this.disableUpdatePosition=t(e.disableUpdatePosition),this.beforeShowCallback=e.beforeShow,this.afterShowCallback=e.afterShow,this.beforeHideCallback=e.beforeHide,this.afterHideCallback=e.afterHide,this.events={},this.$popover=u.getElement(this.target)}},{key:"setDefaultProps",value:function(e){return Object.assign({position:"auto",margin:8,offset:5,enterDelay:0,exitDelay:0,showDuration:300,hideDuration:200,transitionDistance:10,updatePositionThrottle:100,zIndex:1,hideOnOuterClick:!0,showOnHover:!1,hideArrowIcon:!1,disableManualAction:!1,disableUpdatePosition:!1},e)}},{key:"setPropsFromElementAttr",value:function(e){var t=e.ele;for(var i in d){var o=t.getAttribute(i);o&&(e[d[i]]=o)}}},{key:"setElementProps",value:function(){var t=this.$ele;t.popComp=this,t.show=e.showMethod,t.hide=e.hideMethod,t.updatePosition=e.updatePositionMethod,u.addClass(this.$ele,"pop-comp-ele"),u.addClass(this.$popover,"pop-comp-wrapper")}},{key:"getOtherTriggerPopComp",value:function(){var e,t=this.$popover.popComp;return t&&t.$ele!==this.$ele&&(e=t),e}},{key:"initPopper",value:function(){var e={$popperEle:this.$popover,$triggerEle:this.$ele,$arrowEle:this.$arrowEle,position:this.position,margin:this.margin,offset:this.offset,enterDelay:this.enterDelay,exitDelay:this.exitDelay,showDuration:this.showDuration,hideDuration:this.hideDuration,transitionDistance:this.transitionDistance,zIndex:this.zIndex,afterShow:this.afterShow.bind(this),afterHide:this.afterHide.bind(this)};this.popper=new PopperComponent(e)}},{key:"beforeShow",value:function(){"function"==typeof this.beforeShowCallback&&this.beforeShowCallback(this)}},{key:"beforeHide",value:function(){"function"==typeof this.beforeHideCallback&&this.beforeHideCallback(this)}},{key:"show",value:function(){this.isShown()||(this.isShownForOtherTrigger()?this.showAfterOtherHide():(u.addClass(this.$popover,"pop-comp-disable-events"),this.$popover.popComp=this,this.beforeShow(),this.popper.show({resetPosition:!0}),u.addClass(this.$ele,"pop-comp-active")))}},{key:"hide",value:function(){this.isShown()&&(this.beforeHide(),this.popper.hide(),this.removeScrollEventListeners(),this.removeResizeEventListeners())}},{key:"toggle",value:function(e){void 0===e&&(e=!this.isShown()),e?this.show():this.hide()}},{key:"isShown",value:function(){return u.hasClass(this.$ele,"pop-comp-active")}},{key:"isShownForOtherTrigger",value:function(){var e=this.getOtherTriggerPopComp();return!!e&&e.isShown()}},{key:"showAfterOtherHide",value:function(){var e=this,t=this.getOtherTriggerPopComp();if(t){var i=t.exitDelay+t.hideDuration+100;setTimeout((function(){e.show()}),i)}}},{key:"afterShow",value:function(){var e=this;this.showOnHover?setTimeout((function(){u.removeClass(e.$popover,"pop-comp-disable-events")}),2e3):u.removeClass(this.$popover,"pop-comp-disable-events"),this.disableUpdatePosition||(this.addScrollEventListeners(),this.addResizeEventListeners()),"function"==typeof this.afterShowCallback&&this.afterShowCallback(this)}},{key:"afterHide",value:function(){u.removeClass(this.$ele,"pop-comp-active"),"function"==typeof this.afterHideCallback&&this.afterHideCallback(this)}},{key:"renderArrow",value:function(){if(!this.hideArrowIcon){var e=this.$popover.querySelector(".pop-comp-arrow");e||(this.$popover.insertAdjacentHTML("afterbegin",'<i class="pop-comp-arrow"></i>'),e=this.$popover.querySelector(".pop-comp-arrow")),this.$arrowEle=e}}},{key:"destroy",value:function(){this.removeEvents()}}])&&p(t.prototype,i),s&&p(t,s),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,i,s}();d=m.getAttrProps(),window.PopoverComponent=m}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,